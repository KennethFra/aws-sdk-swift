// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RumClientTypes.TimeRange: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case after = "After"
        case before = "Before"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if after != 0 {
            try encodeContainer.encode(after, forKey: .after)
        }
        if before != 0 {
            try encodeContainer.encode(before, forKey: .before)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let afterDecoded = try containerValues.decode(Swift.Int.self, forKey: .after)
        after = afterDecoded
        let beforeDecoded = try containerValues.decode(Swift.Int.self, forKey: .before)
        before = beforeDecoded
    }
}
