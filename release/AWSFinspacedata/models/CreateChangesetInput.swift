// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The request for a CreateChangeset operation.
public struct CreateChangesetInput: Swift.Equatable {
    /// Option to indicate how a Changeset will be applied to a Dataset.
    ///
    /// * REPLACE - Changeset will be considered as a replacement to all prior loaded Changesets.
    ///
    /// * APPEND - Changeset will be considered as an addition to the end of all prior loaded Changesets.
    ///
    /// * MODIFY - Changeset is considered as a replacement to a specific prior ingested Changeset.
    /// This member is required.
    public var changeType: FinspaceDataClientTypes.ChangeType?
    /// A token used to ensure idempotency.
    public var clientToken: Swift.String?
    /// The unique identifier for the FinSpace Dataset where the Changeset will be created.
    /// This member is required.
    public var datasetId: Swift.String?
    /// Options that define the structure of the source file(s) including the format type (formatType), header row (withHeader), data separation character (separator) and the type of compression (compression). formatType is a required attribute and can have the following values:
    ///
    /// * PARQUET - Parquet source file format.
    ///
    /// * CSV - CSV source file format.
    ///
    /// * JSON - JSON source file format.
    ///
    /// * XML - XML source file format.
    ///
    ///
    /// For example, you could specify the following for formatParams:  "formatParams": { "formatType": "CSV", "withHeader": "true", "separator": ",", "compression":"None" }
    /// This member is required.
    public var formatParams: [Swift.String:Swift.String]?
    /// Options that define the location of the data being ingested.
    /// This member is required.
    public var sourceParams: [Swift.String:Swift.String]?

    public init (
        changeType: FinspaceDataClientTypes.ChangeType? = nil,
        clientToken: Swift.String? = nil,
        datasetId: Swift.String? = nil,
        formatParams: [Swift.String:Swift.String]? = nil,
        sourceParams: [Swift.String:Swift.String]? = nil
    )
    {
        self.changeType = changeType
        self.clientToken = clientToken
        self.datasetId = datasetId
        self.formatParams = formatParams
        self.sourceParams = sourceParams
    }
}
