// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.VideoSelector: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case colorSpace = "colorSpace"
        case colorSpaceSettings = "colorSpaceSettings"
        case colorSpaceUsage = "colorSpaceUsage"
        case selectorSettings = "selectorSettings"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let colorSpace = colorSpace {
            try encodeContainer.encode(colorSpace.rawValue, forKey: .colorSpace)
        }
        if let colorSpaceSettings = colorSpaceSettings {
            try encodeContainer.encode(colorSpaceSettings, forKey: .colorSpaceSettings)
        }
        if let colorSpaceUsage = colorSpaceUsage {
            try encodeContainer.encode(colorSpaceUsage.rawValue, forKey: .colorSpaceUsage)
        }
        if let selectorSettings = selectorSettings {
            try encodeContainer.encode(selectorSettings, forKey: .selectorSettings)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let colorSpaceDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.VideoSelectorColorSpace.self, forKey: .colorSpace)
        colorSpace = colorSpaceDecoded
        let colorSpaceSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.VideoSelectorColorSpaceSettings.self, forKey: .colorSpaceSettings)
        colorSpaceSettings = colorSpaceSettingsDecoded
        let colorSpaceUsageDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.VideoSelectorColorSpaceUsage.self, forKey: .colorSpaceUsage)
        colorSpaceUsage = colorSpaceUsageDecoded
        let selectorSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.VideoSelectorSettings.self, forKey: .selectorSettings)
        selectorSettings = selectorSettingsDecoded
    }
}
