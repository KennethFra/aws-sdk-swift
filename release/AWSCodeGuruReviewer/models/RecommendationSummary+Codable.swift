// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeGuruReviewerClientTypes.RecommendationSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case endLine = "EndLine"
        case filePath = "FilePath"
        case recommendationCategory = "RecommendationCategory"
        case recommendationId = "RecommendationId"
        case ruleMetadata = "RuleMetadata"
        case severity = "Severity"
        case startLine = "StartLine"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let endLine = endLine {
            try encodeContainer.encode(endLine, forKey: .endLine)
        }
        if let filePath = filePath {
            try encodeContainer.encode(filePath, forKey: .filePath)
        }
        if let recommendationCategory = recommendationCategory {
            try encodeContainer.encode(recommendationCategory.rawValue, forKey: .recommendationCategory)
        }
        if let recommendationId = recommendationId {
            try encodeContainer.encode(recommendationId, forKey: .recommendationId)
        }
        if let ruleMetadata = ruleMetadata {
            try encodeContainer.encode(ruleMetadata, forKey: .ruleMetadata)
        }
        if let severity = severity {
            try encodeContainer.encode(severity.rawValue, forKey: .severity)
        }
        if let startLine = startLine {
            try encodeContainer.encode(startLine, forKey: .startLine)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filePath)
        filePath = filePathDecoded
        let recommendationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recommendationId)
        recommendationId = recommendationIdDecoded
        let startLineDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startLine)
        startLine = startLineDecoded
        let endLineDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .endLine)
        endLine = endLineDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let recommendationCategoryDecoded = try containerValues.decodeIfPresent(CodeGuruReviewerClientTypes.RecommendationCategory.self, forKey: .recommendationCategory)
        recommendationCategory = recommendationCategoryDecoded
        let ruleMetadataDecoded = try containerValues.decodeIfPresent(CodeGuruReviewerClientTypes.RuleMetadata.self, forKey: .ruleMetadata)
        ruleMetadata = ruleMetadataDecoded
        let severityDecoded = try containerValues.decodeIfPresent(CodeGuruReviewerClientTypes.Severity.self, forKey: .severity)
        severity = severityDecoded
    }
}
