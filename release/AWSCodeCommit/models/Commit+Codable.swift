// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes.Commit: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case additionalData
        case author
        case commitId
        case committer
        case message
        case parents
        case treeId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let additionalData = additionalData {
            try encodeContainer.encode(additionalData, forKey: .additionalData)
        }
        if let author = author {
            try encodeContainer.encode(author, forKey: .author)
        }
        if let commitId = commitId {
            try encodeContainer.encode(commitId, forKey: .commitId)
        }
        if let committer = committer {
            try encodeContainer.encode(committer, forKey: .committer)
        }
        if let message = message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let parents = parents {
            var parentsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .parents)
            for parentlist0 in parents {
                try parentsContainer.encode(parentlist0)
            }
        }
        if let treeId = treeId {
            try encodeContainer.encode(treeId, forKey: .treeId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .commitId)
        commitId = commitIdDecoded
        let treeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .treeId)
        treeId = treeIdDecoded
        let parentsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .parents)
        var parentsDecoded0:[Swift.String]? = nil
        if let parentsContainer = parentsContainer {
            parentsDecoded0 = [Swift.String]()
            for string0 in parentsContainer {
                if let string0 = string0 {
                    parentsDecoded0?.append(string0)
                }
            }
        }
        parents = parentsDecoded0
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let authorDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.UserInfo.self, forKey: .author)
        author = authorDecoded
        let committerDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.UserInfo.self, forKey: .committer)
        committer = committerDecoded
        let additionalDataDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .additionalData)
        additionalData = additionalDataDecoded
    }
}
