// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCustomRoutingAcceleratorInput: Swift.Equatable {
    /// Indicates whether an accelerator is enabled. The value is true or false. The default value is true. If the value is set to true, an accelerator cannot be deleted. If set to false, the accelerator can be deleted.
    public var enabled: Swift.Bool?
    /// A unique, case-sensitive identifier that you provide to ensure the idempotency—that is, the uniqueness—of the request.
    /// This member is required.
    public var idempotencyToken: Swift.String?
    /// The value for the address type must be IPv4.
    public var ipAddressType: GlobalAcceleratorClientTypes.IpAddressType?
    /// Optionally, if you've added your own IP address pool to Global Accelerator (BYOIP), you can choose IP addresses from your own pool to use for the accelerator's static IP addresses when you create an accelerator. You can specify one or two addresses, separated by a space. Do not include the /32 suffix. Only one IP address from each of your IP address ranges can be used for each accelerator. If you specify only one IP address from your IP address range, Global Accelerator assigns a second static IP address for the accelerator from the AWS IP address pool. Note that you can't update IP addresses for an existing accelerator. To change them, you must create a new accelerator with the new addresses. For more information, see [Bring your own IP addresses (BYOIP)](https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html) in the AWS Global Accelerator Developer Guide.
    public var ipAddresses: [Swift.String]?
    /// The name of a custom routing accelerator. The name can have a maximum of 64 characters, must contain only alphanumeric characters or hyphens (-), and must not begin or end with a hyphen.
    /// This member is required.
    public var name: Swift.String?
    /// Create tags for an accelerator. For more information, see [Tagging in AWS Global Accelerator](https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html) in the AWS Global Accelerator Developer Guide.
    public var tags: [GlobalAcceleratorClientTypes.Tag]?

    public init (
        enabled: Swift.Bool? = nil,
        idempotencyToken: Swift.String? = nil,
        ipAddressType: GlobalAcceleratorClientTypes.IpAddressType? = nil,
        ipAddresses: [Swift.String]? = nil,
        name: Swift.String? = nil,
        tags: [GlobalAcceleratorClientTypes.Tag]? = nil
    )
    {
        self.enabled = enabled
        self.idempotencyToken = idempotencyToken
        self.ipAddressType = ipAddressType
        self.ipAddresses = ipAddresses
        self.name = name
        self.tags = tags
    }
}
