// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodePipelineClientTypes.PipelineMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case created
        case pipelineArn
        case updated
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let created = created {
            try encodeContainer.encode(created.timeIntervalSince1970, forKey: .created)
        }
        if let pipelineArn = pipelineArn {
            try encodeContainer.encode(pipelineArn, forKey: .pipelineArn)
        }
        if let updated = updated {
            try encodeContainer.encode(updated.timeIntervalSince1970, forKey: .updated)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineArn)
        pipelineArn = pipelineArnDecoded
        let createdDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .created)
        created = createdDecoded
        let updatedDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .updated)
        updated = updatedDecoded
    }
}
