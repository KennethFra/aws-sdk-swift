// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateChannelInput: Swift.Equatable {
    /// Whether the channel is private (enabled for playback authorization). Default: false.
    public var authorized: Swift.Bool
    /// Channel latency mode. Use NORMAL to broadcast and deliver live video up to Full HD. Use LOW for near-real-time interaction with viewers. (Note: In the Amazon IVS console, LOW and NORMAL correspond to Ultra-low and Standard, respectively.) Default: LOW.
    public var latencyMode: IvsClientTypes.ChannelLatencyMode?
    /// Channel name.
    public var name: Swift.String?
    /// Recording-configuration ARN. Default: "" (empty string, recording is disabled).
    public var recordingConfigurationArn: Swift.String?
    /// Array of 1-50 maps, each of the form string:string (key:value).
    public var tags: [Swift.String:Swift.String]?
    /// Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately. Default: STANDARD. Valid values:
    ///
    /// * STANDARD: Multiple qualities are generated from the original input, to automatically give viewers the best experience for their devices and network conditions. Resolution can be up to 1080p and bitrate can be up to 8.5 Mbps. Audio is transcoded only for renditions 360p and below; above that, audio is passed through.
    ///
    /// * BASIC: Amazon IVS delivers the original input to viewers. The viewerâ€™s video-quality choice is limited to the original input. Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.
    public var type: IvsClientTypes.ChannelType?

    public init (
        authorized: Swift.Bool = false,
        latencyMode: IvsClientTypes.ChannelLatencyMode? = nil,
        name: Swift.String? = nil,
        recordingConfigurationArn: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        type: IvsClientTypes.ChannelType? = nil
    )
    {
        self.authorized = authorized
        self.latencyMode = latencyMode
        self.name = name
        self.recordingConfigurationArn = recordingConfigurationArn
        self.tags = tags
        self.type = type
    }
}
