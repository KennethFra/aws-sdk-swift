// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IvsClientTypes.AudioConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channels
        case codec
        case sampleRate
        case targetBitrate
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if channels != 0 {
            try encodeContainer.encode(channels, forKey: .channels)
        }
        if let codec = codec {
            try encodeContainer.encode(codec, forKey: .codec)
        }
        if sampleRate != 0 {
            try encodeContainer.encode(sampleRate, forKey: .sampleRate)
        }
        if targetBitrate != 0 {
            try encodeContainer.encode(targetBitrate, forKey: .targetBitrate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codecDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .codec)
        codec = codecDecoded
        let targetBitrateDecoded = try containerValues.decode(Swift.Int.self, forKey: .targetBitrate)
        targetBitrate = targetBitrateDecoded
        let sampleRateDecoded = try containerValues.decode(Swift.Int.self, forKey: .sampleRate)
        sampleRate = sampleRateDecoded
        let channelsDecoded = try containerValues.decode(Swift.Int.self, forKey: .channels)
        channels = channelsDecoded
    }
}
