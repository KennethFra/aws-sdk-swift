// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLensVersionInputBody: Swift.Equatable {
    let lensVersion: Swift.String?
    let isMajorVersion: Swift.Bool
    let clientRequestToken: Swift.String?
}

extension CreateLensVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case isMajorVersion = "IsMajorVersion"
        case lensVersion = "LensVersion"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lensVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lensVersion)
        lensVersion = lensVersionDecoded
        let isMajorVersionDecoded = try containerValues.decode(Swift.Bool.self, forKey: .isMajorVersion)
        isMajorVersion = isMajorVersionDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
