// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateEmailIdentityInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationSetName = "ConfigurationSetName"
        case dkimSigningAttributes = "DkimSigningAttributes"
        case emailIdentity = "EmailIdentity"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configurationSetName = configurationSetName {
            try encodeContainer.encode(configurationSetName, forKey: .configurationSetName)
        }
        if let dkimSigningAttributes = dkimSigningAttributes {
            try encodeContainer.encode(dkimSigningAttributes, forKey: .dkimSigningAttributes)
        }
        if let emailIdentity = emailIdentity {
            try encodeContainer.encode(emailIdentity, forKey: .emailIdentity)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
