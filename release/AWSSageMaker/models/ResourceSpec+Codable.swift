// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ResourceSpec: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instanceType = "InstanceType"
        case lifecycleConfigArn = "LifecycleConfigArn"
        case sageMakerImageArn = "SageMakerImageArn"
        case sageMakerImageVersionArn = "SageMakerImageVersionArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let instanceType = instanceType {
            try encodeContainer.encode(instanceType.rawValue, forKey: .instanceType)
        }
        if let lifecycleConfigArn = lifecycleConfigArn {
            try encodeContainer.encode(lifecycleConfigArn, forKey: .lifecycleConfigArn)
        }
        if let sageMakerImageArn = sageMakerImageArn {
            try encodeContainer.encode(sageMakerImageArn, forKey: .sageMakerImageArn)
        }
        if let sageMakerImageVersionArn = sageMakerImageVersionArn {
            try encodeContainer.encode(sageMakerImageVersionArn, forKey: .sageMakerImageVersionArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sageMakerImageArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sageMakerImageArn)
        sageMakerImageArn = sageMakerImageArnDecoded
        let sageMakerImageVersionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sageMakerImageVersionArn)
        sageMakerImageVersionArn = sageMakerImageVersionArnDecoded
        let instanceTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.AppInstanceType.self, forKey: .instanceType)
        instanceType = instanceTypeDecoded
        let lifecycleConfigArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lifecycleConfigArn)
        lifecycleConfigArn = lifecycleConfigArnDecoded
    }
}
