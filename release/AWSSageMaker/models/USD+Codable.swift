// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.USD: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cents = "Cents"
        case dollars = "Dollars"
        case tenthFractionsOfACent = "TenthFractionsOfACent"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if cents != 0 {
            try encodeContainer.encode(cents, forKey: .cents)
        }
        if dollars != 0 {
            try encodeContainer.encode(dollars, forKey: .dollars)
        }
        if tenthFractionsOfACent != 0 {
            try encodeContainer.encode(tenthFractionsOfACent, forKey: .tenthFractionsOfACent)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dollarsDecoded = try containerValues.decode(Swift.Int.self, forKey: .dollars)
        dollars = dollarsDecoded
        let centsDecoded = try containerValues.decode(Swift.Int.self, forKey: .cents)
        cents = centsDecoded
        let tenthFractionsOfACentDecoded = try containerValues.decode(Swift.Int.self, forKey: .tenthFractionsOfACent)
        tenthFractionsOfACent = tenthFractionsOfACentDecoded
    }
}
