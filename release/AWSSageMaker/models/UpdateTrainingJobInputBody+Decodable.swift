// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTrainingJobInputBody: Swift.Equatable {
    let trainingJobName: Swift.String?
    let profilerConfig: SageMakerClientTypes.ProfilerConfigForUpdate?
    let profilerRuleConfigurations: [SageMakerClientTypes.ProfilerRuleConfiguration]?
}

extension UpdateTrainingJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case profilerConfig = "ProfilerConfig"
        case profilerRuleConfigurations = "ProfilerRuleConfigurations"
        case trainingJobName = "TrainingJobName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trainingJobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trainingJobName)
        trainingJobName = trainingJobNameDecoded
        let profilerConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ProfilerConfigForUpdate.self, forKey: .profilerConfig)
        profilerConfig = profilerConfigDecoded
        let profilerRuleConfigurationsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ProfilerRuleConfiguration?].self, forKey: .profilerRuleConfigurations)
        var profilerRuleConfigurationsDecoded0:[SageMakerClientTypes.ProfilerRuleConfiguration]? = nil
        if let profilerRuleConfigurationsContainer = profilerRuleConfigurationsContainer {
            profilerRuleConfigurationsDecoded0 = [SageMakerClientTypes.ProfilerRuleConfiguration]()
            for structure0 in profilerRuleConfigurationsContainer {
                if let structure0 = structure0 {
                    profilerRuleConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        profilerRuleConfigurations = profilerRuleConfigurationsDecoded0
    }
}
