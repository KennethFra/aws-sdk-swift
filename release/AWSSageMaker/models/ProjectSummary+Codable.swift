// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ProjectSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case projectArn = "ProjectArn"
        case projectDescription = "ProjectDescription"
        case projectId = "ProjectId"
        case projectName = "ProjectName"
        case projectStatus = "ProjectStatus"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let projectArn = projectArn {
            try encodeContainer.encode(projectArn, forKey: .projectArn)
        }
        if let projectDescription = projectDescription {
            try encodeContainer.encode(projectDescription, forKey: .projectDescription)
        }
        if let projectId = projectId {
            try encodeContainer.encode(projectId, forKey: .projectId)
        }
        if let projectName = projectName {
            try encodeContainer.encode(projectName, forKey: .projectName)
        }
        if let projectStatus = projectStatus {
            try encodeContainer.encode(projectStatus.rawValue, forKey: .projectStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectName)
        projectName = projectNameDecoded
        let projectDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectDescription)
        projectDescription = projectDescriptionDecoded
        let projectArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let projectIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectId)
        projectId = projectIdDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let projectStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ProjectStatus.self, forKey: .projectStatus)
        projectStatus = projectStatusDecoded
    }
}
