// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListDevicesInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceFleetName = "DeviceFleetName"
        case latestHeartbeatAfter = "LatestHeartbeatAfter"
        case maxResults = "MaxResults"
        case modelName = "ModelName"
        case nextToken = "NextToken"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deviceFleetName = deviceFleetName {
            try encodeContainer.encode(deviceFleetName, forKey: .deviceFleetName)
        }
        if let latestHeartbeatAfter = latestHeartbeatAfter {
            try encodeContainer.encode(latestHeartbeatAfter.timeIntervalSince1970, forKey: .latestHeartbeatAfter)
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let modelName = modelName {
            try encodeContainer.encode(modelName, forKey: .modelName)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
