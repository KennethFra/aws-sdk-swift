// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.MetricDatum: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metricName = "MetricName"
        case `set` = "Set"
        case value = "Value"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let metricName = metricName {
            try encodeContainer.encode(metricName.rawValue, forKey: .metricName)
        }
        if let `set` = `set` {
            try encodeContainer.encode(`set`.rawValue, forKey: .`set`)
        }
        if value != 0.0 {
            try encodeContainer.encode(value, forKey: .value)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricNameDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.AutoMLMetricEnum.self, forKey: .metricName)
        metricName = metricNameDecoded
        let valueDecoded = try containerValues.decode(Swift.Float.self, forKey: .value)
        value = valueDecoded
        let setDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetricSetSource.self, forKey: .set)
        `set` = setDecoded
    }
}
