// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TimestreamQueryClientTypes.QueryStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cumulativeBytesMetered = "CumulativeBytesMetered"
        case cumulativeBytesScanned = "CumulativeBytesScanned"
        case progressPercentage = "ProgressPercentage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if cumulativeBytesMetered != 0 {
            try encodeContainer.encode(cumulativeBytesMetered, forKey: .cumulativeBytesMetered)
        }
        if cumulativeBytesScanned != 0 {
            try encodeContainer.encode(cumulativeBytesScanned, forKey: .cumulativeBytesScanned)
        }
        if progressPercentage != 0.0 {
            try encodeContainer.encode(progressPercentage, forKey: .progressPercentage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let progressPercentageDecoded = try containerValues.decode(Swift.Double.self, forKey: .progressPercentage)
        progressPercentage = progressPercentageDecoded
        let cumulativeBytesScannedDecoded = try containerValues.decode(Swift.Int.self, forKey: .cumulativeBytesScanned)
        cumulativeBytesScanned = cumulativeBytesScannedDecoded
        let cumulativeBytesMeteredDecoded = try containerValues.decode(Swift.Int.self, forKey: .cumulativeBytesMetered)
        cumulativeBytesMetered = cumulativeBytesMeteredDecoded
    }
}
