// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateServiceInput: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
    public var autoScalingConfigurationArn: Swift.String?
    /// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an Amazon Web Services managed CMK.
    public var encryptionConfiguration: AppRunnerClientTypes.EncryptionConfiguration?
    /// The settings for the health check that App Runner performs to monitor the health of your service.
    public var healthCheckConfiguration: AppRunnerClientTypes.HealthCheckConfiguration?
    /// The runtime configuration of instances (scaling units) of the App Runner service.
    public var instanceConfiguration: AppRunnerClientTypes.InstanceConfiguration?
    /// A name for the new service. It must be unique across all the running App Runner services in your Amazon Web Services account in the Amazon Web Services Region.
    /// This member is required.
    public var serviceName: Swift.String?
    /// The source to deploy to the App Runner service. It can be a code or an image repository.
    /// This member is required.
    public var sourceConfiguration: AppRunnerClientTypes.SourceConfiguration?
    /// An optional list of metadata items that you can associate with your service resource. A tag is a key-value pair.
    public var tags: [AppRunnerClientTypes.Tag]?

    public init (
        autoScalingConfigurationArn: Swift.String? = nil,
        encryptionConfiguration: AppRunnerClientTypes.EncryptionConfiguration? = nil,
        healthCheckConfiguration: AppRunnerClientTypes.HealthCheckConfiguration? = nil,
        instanceConfiguration: AppRunnerClientTypes.InstanceConfiguration? = nil,
        serviceName: Swift.String? = nil,
        sourceConfiguration: AppRunnerClientTypes.SourceConfiguration? = nil,
        tags: [AppRunnerClientTypes.Tag]? = nil
    )
    {
        self.autoScalingConfigurationArn = autoScalingConfigurationArn
        self.encryptionConfiguration = encryptionConfiguration
        self.healthCheckConfiguration = healthCheckConfiguration
        self.instanceConfiguration = instanceConfiguration
        self.serviceName = serviceName
        self.sourceConfiguration = sourceConfiguration
        self.tags = tags
    }
}
