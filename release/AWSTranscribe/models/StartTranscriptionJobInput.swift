// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartTranscriptionJobInput: Swift.Equatable {
    /// An object that contains the request parameters for content redaction.
    public var contentRedaction: TranscribeClientTypes.ContentRedaction?
    /// Set this field to true to enable automatic language identification. Automatic language identification is disabled by default. You receive a BadRequestException error if you enter a value for a LanguageCode.
    public var identifyLanguage: Swift.Bool?
    /// Provides information about how a transcription job is executed. Use this field to indicate that the job can be queued for deferred execution if the concurrency limit is reached and there are no slots available to immediately run the job.
    public var jobExecutionSettings: TranscribeClientTypes.JobExecutionSettings?
    /// A map of plain text, non-secret key:value pairs, known as encryption context pairs, that provide an added layer of security for your data.
    public var kMSEncryptionContext: [Swift.String:Swift.String]?
    /// The language code for the language used in the input media file. To transcribe speech in Modern Standard Arabic (ar-SA), your audio or video file must be encoded at a sample rate of 16,000 Hz or higher.
    public var languageCode: TranscribeClientTypes.LanguageCode?
    /// The language identification settings associated with your transcription job. These settings include VocabularyName, VocabularyFilterName, and LanguageModelName.
    public var languageIdSettings: [Swift.String:TranscribeClientTypes.LanguageIdSettings]?
    /// An object containing a list of languages that might be present in your collection of audio files. Automatic language identification chooses a language that best matches the source audio from that list. To transcribe speech in Modern Standard Arabic (ar-SA), your audio or video file must be encoded at a sample rate of 16,000 Hz or higher.
    public var languageOptions: [TranscribeClientTypes.LanguageCode]?
    /// An object that describes the input media for a transcription job.
    /// This member is required.
    public var media: TranscribeClientTypes.Media?
    /// The format of the input media file.
    public var mediaFormat: TranscribeClientTypes.MediaFormat?
    /// The sample rate, in Hertz, of the audio track in the input media file. If you do not specify the media sample rate, Amazon Transcribe determines the sample rate. If you specify the sample rate, it must match the sample rate detected by Amazon Transcribe. In most cases, you should leave the MediaSampleRateHertz field blank and let Amazon Transcribe determine the sample rate.
    public var mediaSampleRateHertz: Swift.Int?
    /// Choose the custom language model you use for your transcription job in this parameter.
    public var modelSettings: TranscribeClientTypes.ModelSettings?
    /// The location where the transcription is stored. If you set the OutputBucketName, Amazon Transcribe puts the transcript in the specified S3 bucket. When you call the [GetTranscriptionJob] operation, the operation returns this location in the TranscriptFileUri field. If you enable content redaction, the redacted transcript appears in RedactedTranscriptFileUri. If you enable content redaction and choose to output an unredacted transcript, that transcript's location still appears in the TranscriptFileUri. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see [Permissions Required for IAM User Roles](https://docs.aws.amazon.com/transcribe/latest/dg/security_iam_id-based-policy-examples.html#auth-role-iam-user). You can specify an Amazon Web Services Key Management Service (KMS) key to encrypt the output of your transcription using the OutputEncryptionKMSKeyId parameter. If you don't specify a KMS key, Amazon Transcribe uses the default Amazon S3 key for server-side encryption of transcripts that are placed in your S3 bucket. If you don't set the OutputBucketName, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the TranscriptFileUri field. Use this URL to download the transcription.
    public var outputBucketName: Swift.String?
    /// The Amazon Resource Name (ARN) of the Amazon Web Services Key Management Service (KMS) key used to encrypt the output of the transcription job. The user calling the StartTranscriptionJob operation must have permission to use the specified KMS key. You can use either of the following to identify a KMS key in the current account:
    ///
    /// * KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"
    ///
    /// * KMS Key Alias: "alias/ExampleAlias"
    ///
    ///
    /// You can use either of the following to identify a KMS key in the current account or another account:
    ///
    /// * Amazon Resource Name (ARN) of a KMS Key: "arn:aws:kms:region:account ID:key/1234abcd-12ab-34cd-56ef-1234567890ab"
    ///
    /// * ARN of a KMS Key Alias: "arn:aws:kms:region:account-ID:alias/ExampleAlias"
    ///
    ///
    /// If you don't specify an encryption key, the output of the transcription job is encrypted with the default Amazon S3 key (SSE-S3). If you specify a KMS key to encrypt your output, you must also specify an output location in the OutputBucketName parameter.
    public var outputEncryptionKMSKeyId: Swift.String?
    /// You can specify a location in an Amazon S3 bucket to store the output of your transcription job. If you don't specify an output key, Amazon Transcribe stores the output of your transcription job in the Amazon S3 bucket you specified. By default, the object key is "your-transcription-job-name.json". You can use output keys to specify the Amazon S3 prefix and file name of the transcription output. For example, specifying the Amazon S3 prefix, "folder1/folder2/", as an output key would lead to the output being stored as "folder1/folder2/your-transcription-job-name.json". If you specify "my-other-job-name.json" as the output key, the object key is changed to "my-other-job-name.json". You can use an output key to change both the prefix and the file name, for example "folder/my-other-job-name.json". If you specify an output key, you must also specify an S3 bucket in the OutputBucketName parameter.
    public var outputKey: Swift.String?
    /// A Settings object that provides optional settings for a transcription job.
    public var settings: TranscribeClientTypes.Settings?
    /// Add subtitles to your batch transcription job.
    public var subtitles: TranscribeClientTypes.Subtitles?
    /// Add tags to an Amazon Transcribe transcription job.
    public var tags: [TranscribeClientTypes.Tag]?
    /// The name of the job. You can't use the strings "." or ".." by themselves as the job name. The name must also be unique within an Amazon Web Services account. If you try to create a transcription job with the same name as a previous transcription job, you get a ConflictException error.
    /// This member is required.
    public var transcriptionJobName: Swift.String?

    public init (
        contentRedaction: TranscribeClientTypes.ContentRedaction? = nil,
        identifyLanguage: Swift.Bool? = nil,
        jobExecutionSettings: TranscribeClientTypes.JobExecutionSettings? = nil,
        kMSEncryptionContext: [Swift.String:Swift.String]? = nil,
        languageCode: TranscribeClientTypes.LanguageCode? = nil,
        languageIdSettings: [Swift.String:TranscribeClientTypes.LanguageIdSettings]? = nil,
        languageOptions: [TranscribeClientTypes.LanguageCode]? = nil,
        media: TranscribeClientTypes.Media? = nil,
        mediaFormat: TranscribeClientTypes.MediaFormat? = nil,
        mediaSampleRateHertz: Swift.Int? = nil,
        modelSettings: TranscribeClientTypes.ModelSettings? = nil,
        outputBucketName: Swift.String? = nil,
        outputEncryptionKMSKeyId: Swift.String? = nil,
        outputKey: Swift.String? = nil,
        settings: TranscribeClientTypes.Settings? = nil,
        subtitles: TranscribeClientTypes.Subtitles? = nil,
        tags: [TranscribeClientTypes.Tag]? = nil,
        transcriptionJobName: Swift.String? = nil
    )
    {
        self.contentRedaction = contentRedaction
        self.identifyLanguage = identifyLanguage
        self.jobExecutionSettings = jobExecutionSettings
        self.kMSEncryptionContext = kMSEncryptionContext
        self.languageCode = languageCode
        self.languageIdSettings = languageIdSettings
        self.languageOptions = languageOptions
        self.media = media
        self.mediaFormat = mediaFormat
        self.mediaSampleRateHertz = mediaSampleRateHertz
        self.modelSettings = modelSettings
        self.outputBucketName = outputBucketName
        self.outputEncryptionKMSKeyId = outputEncryptionKMSKeyId
        self.outputKey = outputKey
        self.settings = settings
        self.subtitles = subtitles
        self.tags = tags
        self.transcriptionJobName = transcriptionJobName
    }
}
