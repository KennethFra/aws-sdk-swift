// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranscribeClientTypes.ContentRedaction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case redactionOutput = "RedactionOutput"
        case redactionType = "RedactionType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let redactionOutput = redactionOutput {
            try encodeContainer.encode(redactionOutput.rawValue, forKey: .redactionOutput)
        }
        if let redactionType = redactionType {
            try encodeContainer.encode(redactionType.rawValue, forKey: .redactionType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let redactionTypeDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.RedactionType.self, forKey: .redactionType)
        redactionType = redactionTypeDecoded
        let redactionOutputDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.RedactionOutput.self, forKey: .redactionOutput)
        redactionOutput = redactionOutputDecoded
    }
}
