// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateMedicalVocabularyInput: Swift.Equatable {
    /// The language code for the language used for the entries in your custom vocabulary. The language code of your custom vocabulary must match the language code of your transcription job. US English (en-US) is the only language code available for Amazon Transcribe Medical.
    /// This member is required.
    public var languageCode: TranscribeClientTypes.LanguageCode?
    /// Adds one or more tags, each in the form of a key:value pair, to a new medical vocabulary at the time you create this new vocabulary.
    public var tags: [TranscribeClientTypes.Tag]?
    /// The location in Amazon S3 of the text file you use to define your custom vocabulary. The URI must be in the same Amazon Web Services Region as the resource that you're calling. Enter information about your VocabularyFileUri in the following format:  https://s3..amazonaws.com///  The following is an example URI for a vocabulary file that is stored in Amazon S3: https://s3.us-east-1.amazonaws.com/AWSDOC-EXAMPLE-BUCKET/vocab.txt For more information about Amazon S3 object names, see [Object Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys) in the Amazon S3 Developer Guide. For more information about custom vocabularies, see [Medical Custom Vocabularies](https://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html#how-vocabulary-med).
    /// This member is required.
    public var vocabularyFileUri: Swift.String?
    /// The name of the custom vocabulary. This case-sensitive name must be unique within an Amazon Web Services account. If you try to create a vocabulary with the same name as a previous vocabulary, you get a ConflictException error.
    /// This member is required.
    public var vocabularyName: Swift.String?

    public init (
        languageCode: TranscribeClientTypes.LanguageCode? = nil,
        tags: [TranscribeClientTypes.Tag]? = nil,
        vocabularyFileUri: Swift.String? = nil,
        vocabularyName: Swift.String? = nil
    )
    {
        self.languageCode = languageCode
        self.tags = tags
        self.vocabularyFileUri = vocabularyFileUri
        self.vocabularyName = vocabularyName
    }
}
