// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranscribeClientTypes {
    /// Describes an asynchronous analytics job that was created with the StartAnalyticsJob operation.
    public struct CallAnalyticsJob: Swift.Equatable {
        /// The name of the call analytics job.
        public var callAnalyticsJobName: Swift.String?
        /// The status of the analytics job.
        public var callAnalyticsJobStatus: TranscribeClientTypes.CallAnalyticsJobStatus?
        /// Shows numeric values to indicate the channel assigned to the agent's audio and the channel assigned to the customer's audio.
        public var channelDefinitions: [TranscribeClientTypes.ChannelDefinition]?
        /// A timestamp that shows when the analytics job was completed.
        public var completionTime: ClientRuntime.Date?
        /// A timestamp that shows when the analytics job was created.
        public var creationTime: ClientRuntime.Date?
        /// The Amazon Resource Number (ARN) that you use to access the analytics job. ARNs have the format arn:partition:service:region:account-id:resource-type/resource-id.
        public var dataAccessRoleArn: Swift.String?
        /// If the AnalyticsJobStatus is FAILED, this field contains information about why the job failed. The FailureReason field can contain one of the following values:
        ///
        /// * Unsupported media format: The media format specified in the MediaFormat field of the request isn't valid. See the description of the MediaFormat field for a list of valid values.
        ///
        /// * The media format provided does not match the detected media format: The media format of the audio file doesn't match the format specified in the MediaFormat field in the request. Check the media format of your media file and make sure the two values match.
        ///
        /// * Invalid sample rate for audio file: The sample rate specified in the MediaSampleRateHertz of the request isn't valid. The sample rate must be between 8,000 and 48,000 Hertz.
        ///
        /// * The sample rate provided does not match the detected sample rate: The sample rate in the audio file doesn't match the sample rate specified in the MediaSampleRateHertz field in the request. Check the sample rate of your media file and make sure that the two values match.
        ///
        /// * Invalid file size: file size too large: The size of your audio file is larger than what Amazon Transcribe Medical can process. For more information, see Guidelines and Quotas in the Amazon Transcribe Medical Guide.
        ///
        /// * Invalid number of channels: number of channels too large: Your audio contains more channels than Amazon Transcribe Medical is configured to process. To request additional channels, see Amazon Transcribe Medical Endpoints and Quotas in the [Amazon Web Services General Reference](https://docs.aws.amazon.com/general/latest/gr/Welcome.html).
        public var failureReason: Swift.String?
        /// A value between zero and one that Amazon Transcribe assigned to the language that it identified in the source audio. This value appears only when you don't provide a single language code. Larger values indicate that Amazon Transcribe has higher confidence in the language that it identified
        public var identifiedLanguageScore: Swift.Float?
        /// If you know the language spoken between the customer and the agent, specify a language code for this field. If you don't know the language, you can leave this field blank, and Amazon Transcribe will use machine learning to automatically identify the language. To improve the accuracy of language identification, you can provide an array containing the possible language codes for the language spoken in your audio. Refer to [Supported languages and language-specific features](https://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html) for additional information.
        public var languageCode: TranscribeClientTypes.LanguageCode?
        /// Describes the input media file in a transcription request.
        public var media: TranscribeClientTypes.Media?
        /// The format of the input audio file. Note: for call analytics jobs, only the following media formats are supported: MP3, MP4, WAV, FLAC, OGG, and WebM.
        public var mediaFormat: TranscribeClientTypes.MediaFormat?
        /// The sample rate, in Hertz, of the audio.
        public var mediaSampleRateHertz: Swift.Int?
        /// Provides information about the settings used to run a transcription job.
        public var settings: TranscribeClientTypes.CallAnalyticsJobSettings?
        /// A timestamp that shows when the analytics job started processing.
        public var startTime: ClientRuntime.Date?
        /// Identifies the location of a transcription.
        public var transcript: TranscribeClientTypes.Transcript?

        public init (
            callAnalyticsJobName: Swift.String? = nil,
            callAnalyticsJobStatus: TranscribeClientTypes.CallAnalyticsJobStatus? = nil,
            channelDefinitions: [TranscribeClientTypes.ChannelDefinition]? = nil,
            completionTime: ClientRuntime.Date? = nil,
            creationTime: ClientRuntime.Date? = nil,
            dataAccessRoleArn: Swift.String? = nil,
            failureReason: Swift.String? = nil,
            identifiedLanguageScore: Swift.Float? = nil,
            languageCode: TranscribeClientTypes.LanguageCode? = nil,
            media: TranscribeClientTypes.Media? = nil,
            mediaFormat: TranscribeClientTypes.MediaFormat? = nil,
            mediaSampleRateHertz: Swift.Int? = nil,
            settings: TranscribeClientTypes.CallAnalyticsJobSettings? = nil,
            startTime: ClientRuntime.Date? = nil,
            transcript: TranscribeClientTypes.Transcript? = nil
        )
        {
            self.callAnalyticsJobName = callAnalyticsJobName
            self.callAnalyticsJobStatus = callAnalyticsJobStatus
            self.channelDefinitions = channelDefinitions
            self.completionTime = completionTime
            self.creationTime = creationTime
            self.dataAccessRoleArn = dataAccessRoleArn
            self.failureReason = failureReason
            self.identifiedLanguageScore = identifiedLanguageScore
            self.languageCode = languageCode
            self.media = media
            self.mediaFormat = mediaFormat
            self.mediaSampleRateHertz = mediaSampleRateHertz
            self.settings = settings
            self.startTime = startTime
            self.transcript = transcript
        }
    }

}
