// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranscribeClientTypes {
    /// The data structure that contains the information for a medical transcription job.
    public struct MedicalTranscriptionJob: Swift.Equatable {
        /// A timestamp that shows when the job was completed.
        public var completionTime: ClientRuntime.Date?
        /// Shows the type of content that you've configured Amazon Transcribe Medical to identify in a transcription job. If the value is PHI, you've configured the job to identify personal health information (PHI) in the transcription output.
        public var contentIdentificationType: TranscribeClientTypes.MedicalContentIdentificationType?
        /// A timestamp that shows when the job was created.
        public var creationTime: ClientRuntime.Date?
        /// If the TranscriptionJobStatus field is FAILED, this field contains information about why the job failed. The FailureReason field contains one of the following values:
        ///
        /// * Unsupported media format- The media format specified in the MediaFormat field of the request isn't valid. See the description of the MediaFormat field for a list of valid values.
        ///
        /// * The media format provided does not match the detected media format- The media format of the audio file doesn't match the format specified in the MediaFormat field in the request. Check the media format of your media file and make sure the two values match.
        ///
        /// * Invalid sample rate for audio file- The sample rate specified in the MediaSampleRateHertz of the request isn't valid. The sample rate must be between 8,000 and 48,000 Hertz.
        ///
        /// * The sample rate provided does not match the detected sample rate- The sample rate in the audio file doesn't match the sample rate specified in the MediaSampleRateHertz field in the request. Check the sample rate of your media file and make sure that the two values match.
        ///
        /// * Invalid file size: file size too large- The size of your audio file is larger than what Amazon Transcribe Medical can process. For more information, see [Guidelines and Quotas](https://docs.aws.amazon.com/transcribe/latest/dg/limits-guidelines.html#limits) in the Amazon Transcribe Medical Guide
        ///
        /// * Invalid number of channels: number of channels too large- Your audio contains more channels than Amazon Transcribe Medical is configured to process. To request additional channels, see [Amazon Transcribe Medical Endpoints and Quotas](https://docs.aws.amazon.com/general/latest/gr/transcribe-medical.html) in the Amazon Web Services General Reference
        public var failureReason: Swift.String?
        /// The language code for the language spoken in the source audio file. US English (en-US) is the only supported language for medical transcriptions. Any other value you enter for language code results in a BadRequestException error.
        public var languageCode: TranscribeClientTypes.LanguageCode?
        /// Describes the input media file in a transcription request.
        public var media: TranscribeClientTypes.Media?
        /// The format of the input media file.
        public var mediaFormat: TranscribeClientTypes.MediaFormat?
        /// The sample rate, in Hertz, of the source audio containing medical information. If you don't specify the sample rate, Amazon Transcribe Medical determines it for you. If you choose to specify the sample rate, it must match the rate detected by Amazon Transcribe Medical. In most cases, you should leave the MedicalMediaSampleHertz blank and let Amazon Transcribe Medical determine the sample rate.
        public var mediaSampleRateHertz: Swift.Int?
        /// The name for a given medical transcription job.
        public var medicalTranscriptionJobName: Swift.String?
        /// Object that contains object.
        public var settings: TranscribeClientTypes.MedicalTranscriptionSetting?
        /// The medical specialty of any clinicians providing a dictation or having a conversation. Refer to [Transcribing a medical conversation](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-medical-conversation.html)for a list of supported specialties.
        public var specialty: TranscribeClientTypes.Specialty?
        /// A timestamp that shows when the job started processing.
        public var startTime: ClientRuntime.Date?
        /// A key:value pair assigned to a given medical transcription job.
        public var tags: [TranscribeClientTypes.Tag]?
        /// An object that contains the MedicalTranscript. The MedicalTranscript contains the TranscriptFileUri.
        public var transcript: TranscribeClientTypes.MedicalTranscript?
        /// The completion status of a medical transcription job.
        public var transcriptionJobStatus: TranscribeClientTypes.TranscriptionJobStatus?
        /// The type of speech in the transcription job. CONVERSATION is generally used for patient-physician dialogues. DICTATION is the setting for physicians speaking their notes after seeing a patient. For more information, see [What is Amazon Transcribe Medical?](https://docs.aws.amazon.com/transcribe/latest/dg/what-is-transcribe-med.html).
        public var type: TranscribeClientTypes.ModelType?

        public init (
            completionTime: ClientRuntime.Date? = nil,
            contentIdentificationType: TranscribeClientTypes.MedicalContentIdentificationType? = nil,
            creationTime: ClientRuntime.Date? = nil,
            failureReason: Swift.String? = nil,
            languageCode: TranscribeClientTypes.LanguageCode? = nil,
            media: TranscribeClientTypes.Media? = nil,
            mediaFormat: TranscribeClientTypes.MediaFormat? = nil,
            mediaSampleRateHertz: Swift.Int? = nil,
            medicalTranscriptionJobName: Swift.String? = nil,
            settings: TranscribeClientTypes.MedicalTranscriptionSetting? = nil,
            specialty: TranscribeClientTypes.Specialty? = nil,
            startTime: ClientRuntime.Date? = nil,
            tags: [TranscribeClientTypes.Tag]? = nil,
            transcript: TranscribeClientTypes.MedicalTranscript? = nil,
            transcriptionJobStatus: TranscribeClientTypes.TranscriptionJobStatus? = nil,
            type: TranscribeClientTypes.ModelType? = nil
        )
        {
            self.completionTime = completionTime
            self.contentIdentificationType = contentIdentificationType
            self.creationTime = creationTime
            self.failureReason = failureReason
            self.languageCode = languageCode
            self.media = media
            self.mediaFormat = mediaFormat
            self.mediaSampleRateHertz = mediaSampleRateHertz
            self.medicalTranscriptionJobName = medicalTranscriptionJobName
            self.settings = settings
            self.specialty = specialty
            self.startTime = startTime
            self.tags = tags
            self.transcript = transcript
            self.transcriptionJobStatus = transcriptionJobStatus
            self.type = type
        }
    }

}
