// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateVocabularyFilterInput: Swift.Equatable {
    /// The language code of the words in the vocabulary filter. All words in the filter must be in the same language. The vocabulary filter can only be used with transcription jobs in the specified language.
    /// This member is required.
    public var languageCode: TranscribeClientTypes.LanguageCode?
    /// Adds one or more tags, each in the form of a key:value pair, to a new Amazon Transcribe vocabulary filter at the time you create this new vocabulary filter.
    public var tags: [TranscribeClientTypes.Tag]?
    /// The Amazon S3 location of a text file used as input to create the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see [Character Sets for Custom Vocabularies](https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets). The specified file must be less than 50 KB of UTF-8 characters. If you provide the location of a list of words in the VocabularyFilterFileUri parameter, you can't use the Words parameter.
    public var vocabularyFilterFileUri: Swift.String?
    /// The vocabulary filter name. The name must be unique within the account that contains it. If you try to create a vocabulary filter with the same name as another vocabulary filter, you get a ConflictException error.
    /// This member is required.
    public var vocabularyFilterName: Swift.String?
    /// The words to use in the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see [Character Sets for Custom Vocabularies](https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets). If you provide a list of words in the Words parameter, you can't use the VocabularyFilterFileUri parameter.
    public var words: [Swift.String]?

    public init (
        languageCode: TranscribeClientTypes.LanguageCode? = nil,
        tags: [TranscribeClientTypes.Tag]? = nil,
        vocabularyFilterFileUri: Swift.String? = nil,
        vocabularyFilterName: Swift.String? = nil,
        words: [Swift.String]? = nil
    )
    {
        self.languageCode = languageCode
        self.tags = tags
        self.vocabularyFilterFileUri = vocabularyFilterFileUri
        self.vocabularyFilterName = vocabularyFilterName
        self.words = words
    }
}
