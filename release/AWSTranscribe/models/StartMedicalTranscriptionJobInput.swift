// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartMedicalTranscriptionJobInput: Swift.Equatable {
    /// You can configure Amazon Transcribe Medical to label content in the transcription output. If you specify PHI, Amazon Transcribe Medical labels the personal health information (PHI) that it identifies in the transcription output.
    public var contentIdentificationType: TranscribeClientTypes.MedicalContentIdentificationType?
    /// A map of plain text, non-secret key:value pairs, known as encryption context pairs, that provide an added layer of security for your data.
    public var kMSEncryptionContext: [Swift.String:Swift.String]?
    /// The language code for the language spoken in the input media file. US English (en-US) is the valid value for medical transcription jobs. Any other value you enter for language code results in a BadRequestException error.
    /// This member is required.
    public var languageCode: TranscribeClientTypes.LanguageCode?
    /// Describes the input media file in a transcription request.
    /// This member is required.
    public var media: TranscribeClientTypes.Media?
    /// The audio format of the input media file.
    public var mediaFormat: TranscribeClientTypes.MediaFormat?
    /// The sample rate, in Hertz, of the audio track in the input media file. If you do not specify the media sample rate, Amazon Transcribe Medical determines the sample rate. If you specify the sample rate, it must match the rate detected by Amazon Transcribe Medical. In most cases, you should leave the MediaSampleRateHertz field blank and let Amazon Transcribe Medical determine the sample rate.
    public var mediaSampleRateHertz: Swift.Int?
    /// The name of the medical transcription job. You can't use the strings "." or ".." by themselves as the job name. The name must also be unique within an Amazon Web Services account. If you try to create a medical transcription job with the same name as a previous medical transcription job, you get a ConflictException error.
    /// This member is required.
    public var medicalTranscriptionJobName: Swift.String?
    /// The Amazon S3 location where the transcription is stored. You must set OutputBucketName for Amazon Transcribe Medical to store the transcription results. Your transcript appears in the S3 location you specify. When you call the [GetMedicalTranscriptionJob], the operation returns this location in the TranscriptFileUri field. The S3 bucket must have permissions that allow Amazon Transcribe Medical to put files in the bucket. For more information, see [Permissions Required for IAM User Roles](https://docs.aws.amazon.com/transcribe/latest/dg/security_iam_id-based-policy-examples.html#auth-role-iam-user). You can specify an Amazon Web Services Key Management Service (KMS) key to encrypt the output of your transcription using the OutputEncryptionKMSKeyId parameter. If you don't specify a KMS key, Amazon Transcribe Medical uses the default Amazon S3 key for server-side encryption of transcripts that are placed in your S3 bucket.
    /// This member is required.
    public var outputBucketName: Swift.String?
    /// The Amazon Resource Name (ARN) of the Amazon Web Services Key Management Service (KMS) key used to encrypt the output of the transcription job. The user calling the [StartMedicalTranscriptionJob] operation must have permission to use the specified KMS key. You use either of the following to identify a KMS key in the current account:
    ///
    /// * KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"
    ///
    /// * KMS Key Alias: "alias/ExampleAlias"
    ///
    ///
    /// You can use either of the following to identify a KMS key in the current account or another account:
    ///
    /// * Amazon Resource Name (ARN) of a KMS key in the current account or another account: "arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab"
    ///
    /// * ARN of a KMS Key Alias: "arn:aws:kms:region:account ID:alias/ExampleAlias"
    ///
    ///
    /// If you don't specify an encryption key, the output of the medical transcription job is encrypted with the default Amazon S3 key (SSE-S3). If you specify a KMS key to encrypt your output, you must also specify an output location in the OutputBucketName parameter.
    public var outputEncryptionKMSKeyId: Swift.String?
    /// You can specify a location in an Amazon S3 bucket to store the output of your medical transcription job. If you don't specify an output key, Amazon Transcribe Medical stores the output of your transcription job in the Amazon S3 bucket you specified. By default, the object key is "your-transcription-job-name.json". You can use output keys to specify the Amazon S3 prefix and file name of the transcription output. For example, specifying the Amazon S3 prefix, "folder1/folder2/", as an output key would lead to the output being stored as "folder1/folder2/your-transcription-job-name.json". If you specify "my-other-job-name.json" as the output key, the object key is changed to "my-other-job-name.json". You can use an output key to change both the prefix and the file name, for example "folder/my-other-job-name.json". If you specify an output key, you must also specify an S3 bucket in the OutputBucketName parameter.
    public var outputKey: Swift.String?
    /// Optional settings for the medical transcription job.
    public var settings: TranscribeClientTypes.MedicalTranscriptionSetting?
    /// The medical specialty of any clinician speaking in the input media.
    /// This member is required.
    public var specialty: TranscribeClientTypes.Specialty?
    /// Add tags to an Amazon Transcribe medical transcription job.
    public var tags: [TranscribeClientTypes.Tag]?
    /// The type of speech in the input audio. CONVERSATION refers to conversations between two or more speakers, e.g., a conversations between doctors and patients. DICTATION refers to single-speaker dictated speech, such as clinical notes.
    /// This member is required.
    public var type: TranscribeClientTypes.ModelType?

    public init (
        contentIdentificationType: TranscribeClientTypes.MedicalContentIdentificationType? = nil,
        kMSEncryptionContext: [Swift.String:Swift.String]? = nil,
        languageCode: TranscribeClientTypes.LanguageCode? = nil,
        media: TranscribeClientTypes.Media? = nil,
        mediaFormat: TranscribeClientTypes.MediaFormat? = nil,
        mediaSampleRateHertz: Swift.Int? = nil,
        medicalTranscriptionJobName: Swift.String? = nil,
        outputBucketName: Swift.String? = nil,
        outputEncryptionKMSKeyId: Swift.String? = nil,
        outputKey: Swift.String? = nil,
        settings: TranscribeClientTypes.MedicalTranscriptionSetting? = nil,
        specialty: TranscribeClientTypes.Specialty? = nil,
        tags: [TranscribeClientTypes.Tag]? = nil,
        type: TranscribeClientTypes.ModelType? = nil
    )
    {
        self.contentIdentificationType = contentIdentificationType
        self.kMSEncryptionContext = kMSEncryptionContext
        self.languageCode = languageCode
        self.media = media
        self.mediaFormat = mediaFormat
        self.mediaSampleRateHertz = mediaSampleRateHertz
        self.medicalTranscriptionJobName = medicalTranscriptionJobName
        self.outputBucketName = outputBucketName
        self.outputEncryptionKMSKeyId = outputEncryptionKMSKeyId
        self.outputKey = outputKey
        self.settings = settings
        self.specialty = specialty
        self.tags = tags
        self.type = type
    }
}
