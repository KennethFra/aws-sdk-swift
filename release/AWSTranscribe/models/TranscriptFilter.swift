// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension TranscribeClientTypes {
    /// Matches the output of the transcription to either the specific phrases that you specify, or the intent of the phrases that you specify.
    public struct TranscriptFilter: Swift.Equatable {
        /// A time range, set in seconds, between two points in the call.
        public var absoluteTimeRange: TranscribeClientTypes.AbsoluteTimeRange?
        /// If TRUE, the rule that you specify is applied to everything except for the phrases that you specify.
        public var negate: Swift.Bool?
        /// Determines whether the customer or the agent is speaking the phrases that you've specified.
        public var participantRole: TranscribeClientTypes.ParticipantRole?
        /// An object that allows percentages to specify the proportion of the call where you would like to apply a filter. For example, you can specify the first half of the call. You can also specify the period of time between halfway through to three-quarters of the way through the call. Because the length of conversation can vary between calls, you can apply relative time ranges across all calls.
        public var relativeTimeRange: TranscribeClientTypes.RelativeTimeRange?
        /// The phrases that you're specifying for the transcript filter to match.
        /// This member is required.
        public var targets: [Swift.String]?
        /// Matches the phrase to the transcription output in a word for word fashion. For example, if you specify the phrase "I want to speak to the manager." Amazon Transcribe attempts to match that specific phrase to the transcription.
        /// This member is required.
        public var transcriptFilterType: TranscribeClientTypes.TranscriptFilterType?

        public init (
            absoluteTimeRange: TranscribeClientTypes.AbsoluteTimeRange? = nil,
            negate: Swift.Bool? = nil,
            participantRole: TranscribeClientTypes.ParticipantRole? = nil,
            relativeTimeRange: TranscribeClientTypes.RelativeTimeRange? = nil,
            targets: [Swift.String]? = nil,
            transcriptFilterType: TranscribeClientTypes.TranscriptFilterType? = nil
        )
        {
            self.absoluteTimeRange = absoluteTimeRange
            self.negate = negate
            self.participantRole = participantRole
            self.relativeTimeRange = relativeTimeRange
            self.targets = targets
            self.transcriptFilterType = transcriptFilterType
        }
    }

}
