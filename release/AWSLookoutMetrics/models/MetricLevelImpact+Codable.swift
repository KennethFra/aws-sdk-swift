// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutMetricsClientTypes.MetricLevelImpact: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contributionMatrix = "ContributionMatrix"
        case metricName = "MetricName"
        case numTimeSeries = "NumTimeSeries"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contributionMatrix = contributionMatrix {
            try encodeContainer.encode(contributionMatrix, forKey: .contributionMatrix)
        }
        if let metricName = metricName {
            try encodeContainer.encode(metricName, forKey: .metricName)
        }
        if numTimeSeries != 0 {
            try encodeContainer.encode(numTimeSeries, forKey: .numTimeSeries)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metricName)
        metricName = metricNameDecoded
        let numTimeSeriesDecoded = try containerValues.decode(Swift.Int.self, forKey: .numTimeSeries)
        numTimeSeries = numTimeSeriesDecoded
        let contributionMatrixDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.ContributionMatrix.self, forKey: .contributionMatrix)
        contributionMatrix = contributionMatrixDecoded
    }
}
