// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateMetricSetInput: Swift.Equatable {
    /// The dimension list.
    public var dimensionList: [Swift.String]?
    /// The metric list.
    public var metricList: [LookoutMetricsClientTypes.Metric]?
    /// The ARN of the dataset to update.
    /// This member is required.
    public var metricSetArn: Swift.String?
    /// The dataset's description.
    public var metricSetDescription: Swift.String?
    /// The dataset's interval.
    public var metricSetFrequency: LookoutMetricsClientTypes.Frequency?
    /// Contains information about source data used to generate a metric.
    public var metricSource: LookoutMetricsClientTypes.MetricSource?
    /// After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3 and Redshift datasources.
    public var offset: Swift.Int
    /// The timestamp column.
    public var timestampColumn: LookoutMetricsClientTypes.TimestampColumn?

    public init (
        dimensionList: [Swift.String]? = nil,
        metricList: [LookoutMetricsClientTypes.Metric]? = nil,
        metricSetArn: Swift.String? = nil,
        metricSetDescription: Swift.String? = nil,
        metricSetFrequency: LookoutMetricsClientTypes.Frequency? = nil,
        metricSource: LookoutMetricsClientTypes.MetricSource? = nil,
        offset: Swift.Int = 0,
        timestampColumn: LookoutMetricsClientTypes.TimestampColumn? = nil
    )
    {
        self.dimensionList = dimensionList
        self.metricList = metricList
        self.metricSetArn = metricSetArn
        self.metricSetDescription = metricSetDescription
        self.metricSetFrequency = metricSetFrequency
        self.metricSource = metricSource
        self.offset = offset
        self.timestampColumn = timestampColumn
    }
}
