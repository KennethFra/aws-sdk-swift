// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaTailorClientTypes.Transition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case relativePosition = "RelativePosition"
        case relativeProgram = "RelativeProgram"
        case scheduledStartTimeMillis = "ScheduledStartTimeMillis"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let relativePosition = relativePosition {
            try encodeContainer.encode(relativePosition.rawValue, forKey: .relativePosition)
        }
        if let relativeProgram = relativeProgram {
            try encodeContainer.encode(relativeProgram, forKey: .relativeProgram)
        }
        if let scheduledStartTimeMillis = scheduledStartTimeMillis {
            try encodeContainer.encode(scheduledStartTimeMillis, forKey: .scheduledStartTimeMillis)
        }
        if let type = type {
            try encodeContainer.encode(type, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relativePositionDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.RelativePosition.self, forKey: .relativePosition)
        relativePosition = relativePositionDecoded
        let relativeProgramDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .relativeProgram)
        relativeProgram = relativeProgramDecoded
        let scheduledStartTimeMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .scheduledStartTimeMillis)
        scheduledStartTimeMillis = scheduledStartTimeMillisDecoded
        let typeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .type)
        type = typeDecoded
    }
}
