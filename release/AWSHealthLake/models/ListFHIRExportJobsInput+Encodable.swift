// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListFHIRExportJobsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datastoreId = "DatastoreId"
        case jobName = "JobName"
        case jobStatus = "JobStatus"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case submittedAfter = "SubmittedAfter"
        case submittedBefore = "SubmittedBefore"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let datastoreId = datastoreId {
            try encodeContainer.encode(datastoreId, forKey: .datastoreId)
        }
        if let jobName = jobName {
            try encodeContainer.encode(jobName, forKey: .jobName)
        }
        if let jobStatus = jobStatus {
            try encodeContainer.encode(jobStatus.rawValue, forKey: .jobStatus)
        }
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let submittedAfter = submittedAfter {
            try encodeContainer.encode(submittedAfter.timeIntervalSince1970, forKey: .submittedAfter)
        }
        if let submittedBefore = submittedBefore {
            try encodeContainer.encode(submittedBefore.timeIntervalSince1970, forKey: .submittedBefore)
        }
    }
}
