// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerProfilesClientTypes.AutoMerging: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conflictResolution = "ConflictResolution"
        case consolidation = "Consolidation"
        case enabled = "Enabled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let conflictResolution = conflictResolution {
            try encodeContainer.encode(conflictResolution, forKey: .conflictResolution)
        }
        if let consolidation = consolidation {
            try encodeContainer.encode(consolidation, forKey: .consolidation)
        }
        if let enabled = enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let consolidationDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.Consolidation.self, forKey: .consolidation)
        consolidation = consolidationDecoded
        let conflictResolutionDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.ConflictResolution.self, forKey: .conflictResolution)
        conflictResolution = conflictResolutionDecoded
    }
}
