// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.CrawlerMetrics: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case crawlerName = "CrawlerName"
        case lastRuntimeSeconds = "LastRuntimeSeconds"
        case medianRuntimeSeconds = "MedianRuntimeSeconds"
        case stillEstimating = "StillEstimating"
        case tablesCreated = "TablesCreated"
        case tablesDeleted = "TablesDeleted"
        case tablesUpdated = "TablesUpdated"
        case timeLeftSeconds = "TimeLeftSeconds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let crawlerName = crawlerName {
            try encodeContainer.encode(crawlerName, forKey: .crawlerName)
        }
        if lastRuntimeSeconds != 0.0 {
            try encodeContainer.encode(lastRuntimeSeconds, forKey: .lastRuntimeSeconds)
        }
        if medianRuntimeSeconds != 0.0 {
            try encodeContainer.encode(medianRuntimeSeconds, forKey: .medianRuntimeSeconds)
        }
        if stillEstimating != false {
            try encodeContainer.encode(stillEstimating, forKey: .stillEstimating)
        }
        if tablesCreated != 0 {
            try encodeContainer.encode(tablesCreated, forKey: .tablesCreated)
        }
        if tablesDeleted != 0 {
            try encodeContainer.encode(tablesDeleted, forKey: .tablesDeleted)
        }
        if tablesUpdated != 0 {
            try encodeContainer.encode(tablesUpdated, forKey: .tablesUpdated)
        }
        if timeLeftSeconds != 0.0 {
            try encodeContainer.encode(timeLeftSeconds, forKey: .timeLeftSeconds)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let crawlerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .crawlerName)
        crawlerName = crawlerNameDecoded
        let timeLeftSecondsDecoded = try containerValues.decode(Swift.Double.self, forKey: .timeLeftSeconds)
        timeLeftSeconds = timeLeftSecondsDecoded
        let stillEstimatingDecoded = try containerValues.decode(Swift.Bool.self, forKey: .stillEstimating)
        stillEstimating = stillEstimatingDecoded
        let lastRuntimeSecondsDecoded = try containerValues.decode(Swift.Double.self, forKey: .lastRuntimeSeconds)
        lastRuntimeSeconds = lastRuntimeSecondsDecoded
        let medianRuntimeSecondsDecoded = try containerValues.decode(Swift.Double.self, forKey: .medianRuntimeSeconds)
        medianRuntimeSeconds = medianRuntimeSecondsDecoded
        let tablesCreatedDecoded = try containerValues.decode(Swift.Int.self, forKey: .tablesCreated)
        tablesCreated = tablesCreatedDecoded
        let tablesUpdatedDecoded = try containerValues.decode(Swift.Int.self, forKey: .tablesUpdated)
        tablesUpdated = tablesUpdatedDecoded
        let tablesDeletedDecoded = try containerValues.decode(Swift.Int.self, forKey: .tablesDeleted)
        tablesDeleted = tablesDeletedDecoded
    }
}
