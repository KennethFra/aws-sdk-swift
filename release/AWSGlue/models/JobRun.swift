// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes {
    /// Contains information about a job run.
    public struct JobRun: Swift.Equatable {
        /// This field is deprecated. Use MaxCapacity instead. The number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the [Glue pricing page](https://aws.amazon.com/glue/pricing/).
        @available(*, deprecated, message: "This property is deprecated, use MaxCapacity instead.")
        public var allocatedCapacity: Swift.Int
        /// The job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself. You can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes. For information about how to specify and consume your own job arguments, see the [Calling Glue APIs in Python](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. For information about the key-value pairs that Glue consumes to set up your job, see the [Special Parameters Used by Glue](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html) topic in the developer guide.
        public var arguments: [Swift.String:Swift.String]?
        /// The number of the attempt to run this job.
        public var attempt: Swift.Int
        /// The date and time that this job run completed.
        public var completedOn: ClientRuntime.Date?
        /// An error message associated with this job run.
        public var errorMessage: Swift.String?
        /// The amount of time (in seconds) that the job run consumed resources.
        public var executionTime: Swift.Int
        /// Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark. For more information about the available Glue versions and corresponding Spark and Python versions, see [Glue version](https://docs.aws.amazon.com/glue/latest/dg/add-job.html) in the developer guide. Jobs that are created without specifying a Glue version default to Glue 0.9.
        public var glueVersion: Swift.String?
        /// The ID of this job run.
        public var id: Swift.String?
        /// The name of the job definition being used in this run.
        public var jobName: Swift.String?
        /// The current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see [Glue Job Run Statuses](https://docs.aws.amazon.com/glue/latest/dg/job-run-statuses.html).
        public var jobRunState: GlueClientTypes.JobRunState?
        /// The last time that this job run was modified.
        public var lastModifiedOn: ClientRuntime.Date?
        /// The name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/, in which case the default encryption is NONE. If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/), then that security configuration is used to encrypt the log group.
        public var logGroupName: Swift.String?
        /// The number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the [Glue pricing page](https://aws.amazon.com/glue/pricing/). Do not set Max Capacity if using WorkerType and NumberOfWorkers. The value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:
        ///
        /// * When you specify a Python shell job (JobCommand.Name="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.
        ///
        /// * When you specify an Apache Spark ETL job (JobCommand.Name="glueetl"), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.
        public var maxCapacity: Swift.Double?
        /// Specifies configuration properties of a job run notification.
        public var notificationProperty: GlueClientTypes.NotificationProperty?
        /// The number of workers of a defined workerType that are allocated when a job runs. The maximum number of workers you can define are 299 for G.1X, and 149 for G.2X.
        public var numberOfWorkers: Swift.Int?
        /// A list of predecessors to this job run.
        public var predecessorRuns: [GlueClientTypes.Predecessor]?
        /// The ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.
        public var previousRunId: Swift.String?
        /// The name of the SecurityConfiguration structure to be used with this job run.
        public var securityConfiguration: Swift.String?
        /// The date and time at which this job run was started.
        public var startedOn: ClientRuntime.Date?
        /// The JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.
        public var timeout: Swift.Int?
        /// The name of the trigger that started this job run.
        public var triggerName: Swift.String?
        /// The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.
        ///
        /// * For the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.
        ///
        /// * For the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.
        ///
        /// * For the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.
        public var workerType: GlueClientTypes.WorkerType?

        public init (
            allocatedCapacity: Swift.Int = 0,
            arguments: [Swift.String:Swift.String]? = nil,
            attempt: Swift.Int = 0,
            completedOn: ClientRuntime.Date? = nil,
            errorMessage: Swift.String? = nil,
            executionTime: Swift.Int = 0,
            glueVersion: Swift.String? = nil,
            id: Swift.String? = nil,
            jobName: Swift.String? = nil,
            jobRunState: GlueClientTypes.JobRunState? = nil,
            lastModifiedOn: ClientRuntime.Date? = nil,
            logGroupName: Swift.String? = nil,
            maxCapacity: Swift.Double? = nil,
            notificationProperty: GlueClientTypes.NotificationProperty? = nil,
            numberOfWorkers: Swift.Int? = nil,
            predecessorRuns: [GlueClientTypes.Predecessor]? = nil,
            previousRunId: Swift.String? = nil,
            securityConfiguration: Swift.String? = nil,
            startedOn: ClientRuntime.Date? = nil,
            timeout: Swift.Int? = nil,
            triggerName: Swift.String? = nil,
            workerType: GlueClientTypes.WorkerType? = nil
        )
        {
            self.allocatedCapacity = allocatedCapacity
            self.arguments = arguments
            self.attempt = attempt
            self.completedOn = completedOn
            self.errorMessage = errorMessage
            self.executionTime = executionTime
            self.glueVersion = glueVersion
            self.id = id
            self.jobName = jobName
            self.jobRunState = jobRunState
            self.lastModifiedOn = lastModifiedOn
            self.logGroupName = logGroupName
            self.maxCapacity = maxCapacity
            self.notificationProperty = notificationProperty
            self.numberOfWorkers = numberOfWorkers
            self.predecessorRuns = predecessorRuns
            self.previousRunId = previousRunId
            self.securityConfiguration = securityConfiguration
            self.startedOn = startedOn
            self.timeout = timeout
            self.triggerName = triggerName
            self.workerType = workerType
        }
    }

}
