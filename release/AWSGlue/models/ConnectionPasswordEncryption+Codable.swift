// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.ConnectionPasswordEncryption: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case awsKmsKeyId = "AwsKmsKeyId"
        case returnConnectionPasswordEncrypted = "ReturnConnectionPasswordEncrypted"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let awsKmsKeyId = awsKmsKeyId {
            try encodeContainer.encode(awsKmsKeyId, forKey: .awsKmsKeyId)
        }
        if returnConnectionPasswordEncrypted != false {
            try encodeContainer.encode(returnConnectionPasswordEncrypted, forKey: .returnConnectionPasswordEncrypted)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let returnConnectionPasswordEncryptedDecoded = try containerValues.decode(Swift.Bool.self, forKey: .returnConnectionPasswordEncrypted)
        returnConnectionPasswordEncrypted = returnConnectionPasswordEncryptedDecoded
        let awsKmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .awsKmsKeyId)
        awsKmsKeyId = awsKmsKeyIdDecoded
    }
}
