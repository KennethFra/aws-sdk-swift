// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RegisterCertificateInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateData = "CertificateData"
        case clientCertAuthSettings = "ClientCertAuthSettings"
        case directoryId = "DirectoryId"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateData = certificateData {
            try encodeContainer.encode(certificateData, forKey: .certificateData)
        }
        if let clientCertAuthSettings = clientCertAuthSettings {
            try encodeContainer.encode(clientCertAuthSettings, forKey: .clientCertAuthSettings)
        }
        if let directoryId = directoryId {
            try encodeContainer.encode(directoryId, forKey: .directoryId)
        }
        if let type = type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }
}
