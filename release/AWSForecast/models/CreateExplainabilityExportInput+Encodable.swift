// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateExplainabilityExportInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destination = "Destination"
        case explainabilityArn = "ExplainabilityArn"
        case explainabilityExportName = "ExplainabilityExportName"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destination = destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let explainabilityArn = explainabilityArn {
            try encodeContainer.encode(explainabilityArn, forKey: .explainabilityArn)
        }
        if let explainabilityExportName = explainabilityExportName {
            try encodeContainer.encode(explainabilityExportName, forKey: .explainabilityExportName)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for tags0 in tags {
                try tagsContainer.encode(tags0)
            }
        }
    }
}
