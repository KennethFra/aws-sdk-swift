// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Describes overrides for a launch template.
    public struct FleetLaunchTemplateOverrides: Swift.Equatable {
        /// The Availability Zone in which to launch the instances.
        public var availabilityZone: Swift.String?
        /// The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes. If you specify InstanceRequirements, you can't specify InstanceTypes.
        public var instanceRequirements: Ec2ClientTypes.InstanceRequirements?
        /// The instance type. If you specify InstanceTypes, you can't specify InstanceRequirements.
        public var instanceType: Ec2ClientTypes.InstanceType?
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance.
        public var maxPrice: Swift.String?
        /// The location where the instance launched, if applicable.
        public var placement: Ec2ClientTypes.PlacementResponse?
        /// The priority for the launch template override. The highest priority is launched first. If the On-Demand AllocationStrategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. If the Spot AllocationStrategy is set to capacity-optimized-prioritized, EC2 Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first. Valid values are whole numbers starting at 0. The lower the number, the higher the priority. If no number is set, the override has the lowest priority. You can set the same priority for different launch template overrides.
        public var priority: Swift.Double?
        /// The ID of the subnet in which to launch the instances.
        public var subnetId: Swift.String?
        /// The number of units provided by the specified instance type.
        public var weightedCapacity: Swift.Double?

        public init (
            availabilityZone: Swift.String? = nil,
            instanceRequirements: Ec2ClientTypes.InstanceRequirements? = nil,
            instanceType: Ec2ClientTypes.InstanceType? = nil,
            maxPrice: Swift.String? = nil,
            placement: Ec2ClientTypes.PlacementResponse? = nil,
            priority: Swift.Double? = nil,
            subnetId: Swift.String? = nil,
            weightedCapacity: Swift.Double? = nil
        )
        {
            self.availabilityZone = availabilityZone
            self.instanceRequirements = instanceRequirements
            self.instanceType = instanceType
            self.maxPrice = maxPrice
            self.placement = placement
            self.priority = priority
            self.subnetId = subnetId
            self.weightedCapacity = weightedCapacity
        }
    }

}
