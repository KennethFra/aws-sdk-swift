// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// The CIDR for an IPAM resource.
    public struct IpamResourceCidr: Swift.Equatable {
        /// The compliance status of the IPAM resource. For more information on compliance statuses, see [Monitor CIDR usage by resource] in the Amazon VPC IPAM User Guide.
        public var complianceStatus: Ec2ClientTypes.IpamComplianceStatus?
        /// The IP address space in the IPAM pool that is allocated to this resource. To convert the decimal to a percentage, multiply the decimal by 100.
        public var ipUsage: Swift.Double?
        /// The IPAM ID for an IPAM resource.
        public var ipamId: Swift.String?
        /// The pool ID for an IPAM resource.
        public var ipamPoolId: Swift.String?
        /// The scope ID for an IPAM resource.
        public var ipamScopeId: Swift.String?
        /// The management state of the resource. For more information about management states, see [Monitor CIDR usage by resource] in the Amazon VPC IPAM User Guide.
        public var managementState: Ec2ClientTypes.IpamManagementState?
        /// The overlap status of an IPAM resource. The overlap status tells you if the CIDR for a resource overlaps with another CIDR in the scope. For more information on overlap statuses, see [Monitor CIDR usage by resource] in the Amazon VPC IPAM User Guide.
        public var overlapStatus: Ec2ClientTypes.IpamOverlapStatus?
        /// The CIDR for an IPAM resource.
        public var resourceCidr: Swift.String?
        /// The ID of an IPAM resource.
        public var resourceId: Swift.String?
        /// The name of an IPAM resource.
        public var resourceName: Swift.String?
        /// The Amazon Web Services account number of the owner of an IPAM resource.
        public var resourceOwnerId: Swift.String?
        /// The Amazon Web Services Region for an IPAM resource.
        public var resourceRegion: Swift.String?
        /// The tags for an IPAM resource.
        public var resourceTags: [Ec2ClientTypes.IpamResourceTag]?
        /// The type of IPAM resource.
        public var resourceType: Ec2ClientTypes.IpamResourceType?
        /// The ID of a VPC.
        public var vpcId: Swift.String?

        public init (
            complianceStatus: Ec2ClientTypes.IpamComplianceStatus? = nil,
            ipUsage: Swift.Double? = nil,
            ipamId: Swift.String? = nil,
            ipamPoolId: Swift.String? = nil,
            ipamScopeId: Swift.String? = nil,
            managementState: Ec2ClientTypes.IpamManagementState? = nil,
            overlapStatus: Ec2ClientTypes.IpamOverlapStatus? = nil,
            resourceCidr: Swift.String? = nil,
            resourceId: Swift.String? = nil,
            resourceName: Swift.String? = nil,
            resourceOwnerId: Swift.String? = nil,
            resourceRegion: Swift.String? = nil,
            resourceTags: [Ec2ClientTypes.IpamResourceTag]? = nil,
            resourceType: Ec2ClientTypes.IpamResourceType? = nil,
            vpcId: Swift.String? = nil
        )
        {
            self.complianceStatus = complianceStatus
            self.ipUsage = ipUsage
            self.ipamId = ipamId
            self.ipamPoolId = ipamPoolId
            self.ipamScopeId = ipamScopeId
            self.managementState = managementState
            self.overlapStatus = overlapStatus
            self.resourceCidr = resourceCidr
            self.resourceId = resourceId
            self.resourceName = resourceName
            self.resourceOwnerId = resourceOwnerId
            self.resourceRegion = resourceRegion
            self.resourceTags = resourceTags
            self.resourceType = resourceType
            self.vpcId = vpcId
        }
    }

}
