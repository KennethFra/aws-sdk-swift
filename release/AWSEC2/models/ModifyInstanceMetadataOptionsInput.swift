// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyInstanceMetadataOptionsInput: Swift.Equatable {
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// Enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the existing state is maintained. If you specify a value of disabled, you cannot access your instance metadata.
    public var httpEndpoint: Ec2ClientTypes.InstanceMetadataEndpointState?
    /// Enables or disables the IPv6 endpoint for the instance metadata service. This setting applies only if you have enabled the HTTP metadata endpoint.
    public var httpProtocolIpv6: Ec2ClientTypes.InstanceMetadataProtocolState?
    /// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. If no parameter is specified, the existing state is maintained. Possible values: Integers from 1 to 64
    public var httpPutResponseHopLimit: Swift.Int?
    /// The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional. If the state is optional, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned. If the state is required, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.
    public var httpTokens: Ec2ClientTypes.HttpTokensState?
    /// The ID of the instance.
    /// This member is required.
    public var instanceId: Swift.String?

    public init (
        dryRun: Swift.Bool? = nil,
        httpEndpoint: Ec2ClientTypes.InstanceMetadataEndpointState? = nil,
        httpProtocolIpv6: Ec2ClientTypes.InstanceMetadataProtocolState? = nil,
        httpPutResponseHopLimit: Swift.Int? = nil,
        httpTokens: Ec2ClientTypes.HttpTokensState? = nil,
        instanceId: Swift.String? = nil
    )
    {
        self.dryRun = dryRun
        self.httpEndpoint = httpEndpoint
        self.httpProtocolIpv6 = httpProtocolIpv6
        self.httpPutResponseHopLimit = httpPutResponseHopLimit
        self.httpTokens = httpTokens
        self.instanceId = instanceId
    }
}
