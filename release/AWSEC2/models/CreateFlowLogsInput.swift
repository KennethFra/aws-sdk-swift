// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateFlowLogsInput: Swift.Equatable {
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [How to ensure idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
    public var clientToken: Swift.String?
    /// The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account. If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn or LogGroupName.
    public var deliverLogsPermissionArn: Swift.String?
    /// The destination options.
    public var destinationOptions: Ec2ClientTypes.DestinationOptionsRequest?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for LogDestinationType. If LogDestinationType is not specified or cloud-watch-logs, specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish to a log group called my-logs, specify arn:aws:logs:us-east-1:123456789012:log-group:my-logs. Alternatively, use LogGroupName instead. If LogDestinationType is s3, specify the ARN of the Amazon S3 bucket. You can also specify a subfolder in the bucket. To specify a subfolder in the bucket, use the following ARN format: bucket_ARN/subfolder_name/. For example, to specify a subfolder named my-logs in a bucket named my-bucket, use the following ARN: arn:aws:s3:::my-bucket/my-logs/. You cannot use AWSLogs as a subfolder name. This is a reserved term.
    public var logDestination: Swift.String?
    /// The type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify cloud-watch-logs. To publish flow log data to Amazon S3, specify s3. If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn or LogGroupName. Default: cloud-watch-logs
    public var logDestinationType: Ec2ClientTypes.LogDestinationType?
    /// The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see [Flow log records](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records). If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field. Specify the fields using the ${field-id} format, separated by spaces. For the CLI, surround this parameter value with single quotes on Linux or double quotes on Windows.
    public var logFormat: Swift.String?
    /// The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn or LogGroupName.
    public var logGroupName: Swift.String?
    /// The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes). When a network interface is attached to a [Nitro-based instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances), the aggregation interval is always 60 seconds or less, regardless of the value that you specify. Default: 600
    public var maxAggregationInterval: Swift.Int?
    /// The ID of the subnet, network interface, or VPC for which you want to create a flow log. Constraints: Maximum of 1000 resources
    /// This member is required.
    public var resourceIds: [Swift.String]?
    /// The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property.
    /// This member is required.
    public var resourceType: Ec2ClientTypes.FlowLogsResourceType?
    /// The tags to apply to the flow logs.
    public var tagSpecifications: [Ec2ClientTypes.TagSpecification]?
    /// The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.
    /// This member is required.
    public var trafficType: Ec2ClientTypes.TrafficType?

    public init (
        clientToken: Swift.String? = nil,
        deliverLogsPermissionArn: Swift.String? = nil,
        destinationOptions: Ec2ClientTypes.DestinationOptionsRequest? = nil,
        dryRun: Swift.Bool? = nil,
        logDestination: Swift.String? = nil,
        logDestinationType: Ec2ClientTypes.LogDestinationType? = nil,
        logFormat: Swift.String? = nil,
        logGroupName: Swift.String? = nil,
        maxAggregationInterval: Swift.Int? = nil,
        resourceIds: [Swift.String]? = nil,
        resourceType: Ec2ClientTypes.FlowLogsResourceType? = nil,
        tagSpecifications: [Ec2ClientTypes.TagSpecification]? = nil,
        trafficType: Ec2ClientTypes.TrafficType? = nil
    )
    {
        self.clientToken = clientToken
        self.deliverLogsPermissionArn = deliverLogsPermissionArn
        self.destinationOptions = destinationOptions
        self.dryRun = dryRun
        self.logDestination = logDestination
        self.logDestinationType = logDestinationType
        self.logFormat = logFormat
        self.logGroupName = logGroupName
        self.maxAggregationInterval = maxAggregationInterval
        self.resourceIds = resourceIds
        self.resourceType = resourceType
        self.tagSpecifications = tagSpecifications
        self.trafficType = trafficType
    }
}
