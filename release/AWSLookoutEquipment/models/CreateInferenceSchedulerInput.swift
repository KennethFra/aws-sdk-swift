// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateInferenceSchedulerInput: Swift.Equatable {
    /// A unique identifier for the request. If you do not set the client request token, Amazon Lookout for Equipment generates one.
    /// This member is required.
    public var clientToken: Swift.String?
    /// A period of time (in minutes) by which inference on the data is delayed after the data starts. For instance, if you select an offset delay time of five minutes, inference will not begin on the data until the first data measurement after the five minute mark. For example, if five minutes is selected, the inference scheduler will wake up at the configured frequency with the additional five minute delay time to check the customer S3 bucket. The customer can upload data at the same frequency and they don't need to stop and restart the scheduler when uploading new data.
    public var dataDelayOffsetInMinutes: Swift.Int?
    /// Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location.
    /// This member is required.
    public var dataInputConfiguration: LookoutEquipmentClientTypes.InferenceInputConfiguration?
    /// Specifies configuration information for the output results for the inference scheduler, including the S3 location for the output.
    /// This member is required.
    public var dataOutputConfiguration: LookoutEquipmentClientTypes.InferenceOutputConfiguration?
    /// How often data is uploaded to the source S3 bucket for the input data. The value chosen is the length of time between data uploads. For instance, if you select 5 minutes, Amazon Lookout for Equipment will upload the real-time data to the source bucket once every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment starts a scheduled inference on your data. In this example, it starts once every 5 minutes.
    /// This member is required.
    public var dataUploadFrequency: LookoutEquipmentClientTypes.DataUploadFrequency?
    /// The name of the inference scheduler being created.
    /// This member is required.
    public var inferenceSchedulerName: Swift.String?
    /// The name of the previously trained ML model being used to create the inference scheduler.
    /// This member is required.
    public var modelName: Swift.String?
    /// The Amazon Resource Name (ARN) of a role with permission to access the data source being used for the inference.
    /// This member is required.
    public var roleArn: Swift.String?
    /// Provides the identifier of the KMS key used to encrypt inference scheduler data by Amazon Lookout for Equipment.
    public var serverSideKmsKeyId: Swift.String?
    /// Any tags associated with the inference scheduler.
    public var tags: [LookoutEquipmentClientTypes.Tag]?

    public init (
        clientToken: Swift.String? = nil,
        dataDelayOffsetInMinutes: Swift.Int? = nil,
        dataInputConfiguration: LookoutEquipmentClientTypes.InferenceInputConfiguration? = nil,
        dataOutputConfiguration: LookoutEquipmentClientTypes.InferenceOutputConfiguration? = nil,
        dataUploadFrequency: LookoutEquipmentClientTypes.DataUploadFrequency? = nil,
        inferenceSchedulerName: Swift.String? = nil,
        modelName: Swift.String? = nil,
        roleArn: Swift.String? = nil,
        serverSideKmsKeyId: Swift.String? = nil,
        tags: [LookoutEquipmentClientTypes.Tag]? = nil
    )
    {
        self.clientToken = clientToken
        self.dataDelayOffsetInMinutes = dataDelayOffsetInMinutes
        self.dataInputConfiguration = dataInputConfiguration
        self.dataOutputConfiguration = dataOutputConfiguration
        self.dataUploadFrequency = dataUploadFrequency
        self.inferenceSchedulerName = inferenceSchedulerName
        self.modelName = modelName
        self.roleArn = roleArn
        self.serverSideKmsKeyId = serverSideKmsKeyId
        self.tags = tags
    }
}
