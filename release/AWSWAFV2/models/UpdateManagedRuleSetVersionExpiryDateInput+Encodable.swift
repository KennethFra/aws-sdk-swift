// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateManagedRuleSetVersionExpiryDateInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case expiryTimestamp = "ExpiryTimestamp"
        case id = "Id"
        case lockToken = "LockToken"
        case name = "Name"
        case scope = "Scope"
        case versionToExpire = "VersionToExpire"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let expiryTimestamp = expiryTimestamp {
            try encodeContainer.encode(expiryTimestamp.timeIntervalSince1970, forKey: .expiryTimestamp)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let lockToken = lockToken {
            try encodeContainer.encode(lockToken, forKey: .lockToken)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let scope = scope {
            try encodeContainer.encode(scope.rawValue, forKey: .scope)
        }
        if let versionToExpire = versionToExpire {
            try encodeContainer.encode(versionToExpire, forKey: .versionToExpire)
        }
    }
}
