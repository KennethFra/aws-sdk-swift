// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Wafv2ClientTypes {
    /// Defines an association between logging destinations and a web ACL resource, for logging from WAF. As part of the association, you can specify parts of the standard logging fields to keep out of the logs and you can specify filters so that you log only a subset of the logging records. For information about configuring web ACL logging destinations, see [Logging web ACL traffic information](https://docs.aws.amazon.com/waf/latest/developerguide/logging.html) in the WAF Developer Guide.
    public struct LoggingConfiguration: Swift.Equatable {
        /// The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
        /// This member is required.
        public var logDestinationConfigs: [Swift.String]?
        /// Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
        public var loggingFilter: Wafv2ClientTypes.LoggingFilter?
        /// Indicates whether the logging configuration was created by Firewall Manager, as part of an WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.
        public var managedByFirewallManager: Swift.Bool
        /// The parts of the request that you want to keep out of the logs. For example, if you redact the SingleHeader field, the HEADER field in the logs will be xxx. You can specify only the following fields for redaction: UriPath, QueryString, SingleHeader, Method, and JsonBody.
        public var redactedFields: [Wafv2ClientTypes.FieldToMatch]?
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
        /// This member is required.
        public var resourceArn: Swift.String?

        public init (
            logDestinationConfigs: [Swift.String]? = nil,
            loggingFilter: Wafv2ClientTypes.LoggingFilter? = nil,
            managedByFirewallManager: Swift.Bool = false,
            redactedFields: [Wafv2ClientTypes.FieldToMatch]? = nil,
            resourceArn: Swift.String? = nil
        )
        {
            self.logDestinationConfigs = logDestinationConfigs
            self.loggingFilter = loggingFilter
            self.managedByFirewallManager = managedByFirewallManager
            self.redactedFields = redactedFields
            self.resourceArn = resourceArn
        }
    }

}
