// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.InAppMessageContent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backgroundColor = "BackgroundColor"
        case bodyConfig = "BodyConfig"
        case headerConfig = "HeaderConfig"
        case imageUrl = "ImageUrl"
        case primaryBtn = "PrimaryBtn"
        case secondaryBtn = "SecondaryBtn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let backgroundColor = backgroundColor {
            try encodeContainer.encode(backgroundColor, forKey: .backgroundColor)
        }
        if let bodyConfig = bodyConfig {
            try encodeContainer.encode(bodyConfig, forKey: .bodyConfig)
        }
        if let headerConfig = headerConfig {
            try encodeContainer.encode(headerConfig, forKey: .headerConfig)
        }
        if let imageUrl = imageUrl {
            try encodeContainer.encode(imageUrl, forKey: .imageUrl)
        }
        if let primaryBtn = primaryBtn {
            try encodeContainer.encode(primaryBtn, forKey: .primaryBtn)
        }
        if let secondaryBtn = secondaryBtn {
            try encodeContainer.encode(secondaryBtn, forKey: .secondaryBtn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backgroundColorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .backgroundColor)
        backgroundColor = backgroundColorDecoded
        let bodyConfigDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.InAppMessageBodyConfig.self, forKey: .bodyConfig)
        bodyConfig = bodyConfigDecoded
        let headerConfigDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.InAppMessageHeaderConfig.self, forKey: .headerConfig)
        headerConfig = headerConfigDecoded
        let imageUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageUrl)
        imageUrl = imageUrlDecoded
        let primaryBtnDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.InAppMessageButton.self, forKey: .primaryBtn)
        primaryBtn = primaryBtnDecoded
        let secondaryBtnDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.InAppMessageButton.self, forKey: .secondaryBtn)
        secondaryBtn = secondaryBtnDecoded
    }
}
