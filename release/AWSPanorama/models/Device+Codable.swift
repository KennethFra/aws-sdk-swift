// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PanoramaClientTypes.Device: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdTime = "CreatedTime"
        case deviceId = "DeviceId"
        case lastUpdatedTime = "LastUpdatedTime"
        case leaseExpirationTime = "LeaseExpirationTime"
        case name = "Name"
        case provisioningStatus = "ProvisioningStatus"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdTime = createdTime {
            try encodeContainer.encode(createdTime.timeIntervalSince1970, forKey: .createdTime)
        }
        if let deviceId = deviceId {
            try encodeContainer.encode(deviceId, forKey: .deviceId)
        }
        if let lastUpdatedTime = lastUpdatedTime {
            try encodeContainer.encode(lastUpdatedTime.timeIntervalSince1970, forKey: .lastUpdatedTime)
        }
        if let leaseExpirationTime = leaseExpirationTime {
            try encodeContainer.encode(leaseExpirationTime.timeIntervalSince1970, forKey: .leaseExpirationTime)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let provisioningStatus = provisioningStatus {
            try encodeContainer.encode(provisioningStatus.rawValue, forKey: .provisioningStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceId)
        deviceId = deviceIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
        let provisioningStatusDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.DeviceStatus.self, forKey: .provisioningStatus)
        provisioningStatus = provisioningStatusDecoded
        let lastUpdatedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedTime)
        lastUpdatedTime = lastUpdatedTimeDecoded
        let leaseExpirationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .leaseExpirationTime)
        leaseExpirationTime = leaseExpirationTimeDecoded
    }
}
