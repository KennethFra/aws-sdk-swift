// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes.SAPODataConnectorProfileProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationHostUrl
        case applicationServicePath
        case clientNumber
        case logonLanguage
        case oAuthProperties
        case portNumber
        case privateLinkServiceName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationHostUrl = applicationHostUrl {
            try encodeContainer.encode(applicationHostUrl, forKey: .applicationHostUrl)
        }
        if let applicationServicePath = applicationServicePath {
            try encodeContainer.encode(applicationServicePath, forKey: .applicationServicePath)
        }
        if let clientNumber = clientNumber {
            try encodeContainer.encode(clientNumber, forKey: .clientNumber)
        }
        if let logonLanguage = logonLanguage {
            try encodeContainer.encode(logonLanguage, forKey: .logonLanguage)
        }
        if let oAuthProperties = oAuthProperties {
            try encodeContainer.encode(oAuthProperties, forKey: .oAuthProperties)
        }
        if portNumber != 0 {
            try encodeContainer.encode(portNumber, forKey: .portNumber)
        }
        if let privateLinkServiceName = privateLinkServiceName {
            try encodeContainer.encode(privateLinkServiceName, forKey: .privateLinkServiceName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationHostUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationHostUrl)
        applicationHostUrl = applicationHostUrlDecoded
        let applicationServicePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationServicePath)
        applicationServicePath = applicationServicePathDecoded
        let portNumberDecoded = try containerValues.decode(Swift.Int.self, forKey: .portNumber)
        portNumber = portNumberDecoded
        let clientNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientNumber)
        clientNumber = clientNumberDecoded
        let logonLanguageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logonLanguage)
        logonLanguage = logonLanguageDecoded
        let privateLinkServiceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .privateLinkServiceName)
        privateLinkServiceName = privateLinkServiceNameDecoded
        let oAuthPropertiesDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.OAuthProperties.self, forKey: .oAuthProperties)
        oAuthProperties = oAuthPropertiesDecoded
    }
}
