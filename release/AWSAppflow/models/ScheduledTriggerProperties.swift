// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes {
    /// Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the Scheduled trigger type.
    public struct ScheduledTriggerProperties: Swift.Equatable {
        /// Specifies whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run.
        public var dataPullMode: AppflowClientTypes.DataPullMode?
        /// Specifies the date range for the records to import from the connector in the first flow run.
        public var firstExecutionFrom: ClientRuntime.Date?
        /// Specifies the scheduled end time for a schedule-triggered flow.
        public var scheduleEndTime: ClientRuntime.Date?
        /// The scheduling expression that determines the rate at which the schedule will run, for example rate(5minutes).
        /// This member is required.
        public var scheduleExpression: Swift.String?
        /// Specifies the optional offset that is added to the time interval for a schedule-triggered flow.
        public var scheduleOffset: Swift.Int
        /// Specifies the scheduled start time for a schedule-triggered flow.
        public var scheduleStartTime: ClientRuntime.Date?
        /// Specifies the time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.
        public var timezone: Swift.String?

        public init (
            dataPullMode: AppflowClientTypes.DataPullMode? = nil,
            firstExecutionFrom: ClientRuntime.Date? = nil,
            scheduleEndTime: ClientRuntime.Date? = nil,
            scheduleExpression: Swift.String? = nil,
            scheduleOffset: Swift.Int = 0,
            scheduleStartTime: ClientRuntime.Date? = nil,
            timezone: Swift.String? = nil
        )
        {
            self.dataPullMode = dataPullMode
            self.firstExecutionFrom = firstExecutionFrom
            self.scheduleEndTime = scheduleEndTime
            self.scheduleExpression = scheduleExpression
            self.scheduleOffset = scheduleOffset
            self.scheduleStartTime = scheduleStartTime
            self.timezone = timezone
        }
    }

}
