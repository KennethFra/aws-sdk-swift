// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComprehendClientTypes.EntityRecognizerMetadataEntityTypesListItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case evaluationMetrics = "EvaluationMetrics"
        case numberOfTrainMentions = "NumberOfTrainMentions"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let evaluationMetrics = evaluationMetrics {
            try encodeContainer.encode(evaluationMetrics, forKey: .evaluationMetrics)
        }
        if let numberOfTrainMentions = numberOfTrainMentions {
            try encodeContainer.encode(numberOfTrainMentions, forKey: .numberOfTrainMentions)
        }
        if let type = type {
            try encodeContainer.encode(type, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .type)
        type = typeDecoded
        let evaluationMetricsDecoded = try containerValues.decodeIfPresent(ComprehendClientTypes.EntityTypesEvaluationMetrics.self, forKey: .evaluationMetrics)
        evaluationMetrics = evaluationMetricsDecoded
        let numberOfTrainMentionsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfTrainMentions)
        numberOfTrainMentions = numberOfTrainMentionsDecoded
    }
}
