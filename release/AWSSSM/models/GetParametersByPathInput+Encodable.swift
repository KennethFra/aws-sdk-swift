// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetParametersByPathInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case parameterFilters = "ParameterFilters"
        case path = "Path"
        case recursive = "Recursive"
        case withDecryption = "WithDecryption"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let parameterFilters = parameterFilters {
            var parameterFiltersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .parameterFilters)
            for parameterstringfilterlist0 in parameterFilters {
                try parameterFiltersContainer.encode(parameterstringfilterlist0)
            }
        }
        if let path = path {
            try encodeContainer.encode(path, forKey: .path)
        }
        if recursive != false {
            try encodeContainer.encode(recursive, forKey: .recursive)
        }
        if withDecryption != false {
            try encodeContainer.encode(withDecryption, forKey: .withDecryption)
        }
    }
}
