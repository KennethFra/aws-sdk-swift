// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.AttachmentContent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hash = "Hash"
        case hashType = "HashType"
        case name = "Name"
        case size = "Size"
        case url = "Url"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hash = hash {
            try encodeContainer.encode(hash, forKey: .hash)
        }
        if let hashType = hashType {
            try encodeContainer.encode(hashType.rawValue, forKey: .hashType)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if size != 0 {
            try encodeContainer.encode(size, forKey: .size)
        }
        if let url = url {
            try encodeContainer.encode(url, forKey: .url)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let sizeDecoded = try containerValues.decode(Swift.Int.self, forKey: .size)
        size = sizeDecoded
        let hashDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hash)
        hash = hashDecoded
        let hashTypeDecoded = try containerValues.decodeIfPresent(SsmClientTypes.AttachmentHashType.self, forKey: .hashType)
        hashType = hashTypeDecoded
        let urlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .url)
        url = urlDecoded
    }
}
