// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateActivationInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultInstanceName = "DefaultInstanceName"
        case description = "Description"
        case expirationDate = "ExpirationDate"
        case iamRole = "IamRole"
        case registrationLimit = "RegistrationLimit"
        case registrationMetadata = "RegistrationMetadata"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultInstanceName = defaultInstanceName {
            try encodeContainer.encode(defaultInstanceName, forKey: .defaultInstanceName)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let expirationDate = expirationDate {
            try encodeContainer.encode(expirationDate.timeIntervalSince1970, forKey: .expirationDate)
        }
        if let iamRole = iamRole {
            try encodeContainer.encode(iamRole, forKey: .iamRole)
        }
        if registrationLimit != 0 {
            try encodeContainer.encode(registrationLimit, forKey: .registrationLimit)
        }
        if let registrationMetadata = registrationMetadata {
            var registrationMetadataContainer = encodeContainer.nestedUnkeyedContainer(forKey: .registrationMetadata)
            for registrationmetadatalist0 in registrationMetadata {
                try registrationMetadataContainer.encode(registrationmetadatalist0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
