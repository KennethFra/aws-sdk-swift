// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FmsClientTypes.EvaluationResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case complianceStatus = "ComplianceStatus"
        case evaluationLimitExceeded = "EvaluationLimitExceeded"
        case violatorCount = "ViolatorCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let complianceStatus = complianceStatus {
            try encodeContainer.encode(complianceStatus.rawValue, forKey: .complianceStatus)
        }
        if evaluationLimitExceeded != false {
            try encodeContainer.encode(evaluationLimitExceeded, forKey: .evaluationLimitExceeded)
        }
        if violatorCount != 0 {
            try encodeContainer.encode(violatorCount, forKey: .violatorCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let complianceStatusDecoded = try containerValues.decodeIfPresent(FmsClientTypes.PolicyComplianceStatusType.self, forKey: .complianceStatus)
        complianceStatus = complianceStatusDecoded
        let violatorCountDecoded = try containerValues.decode(Swift.Int.self, forKey: .violatorCount)
        violatorCount = violatorCountDecoded
        let evaluationLimitExceededDecoded = try containerValues.decode(Swift.Bool.self, forKey: .evaluationLimitExceeded)
        evaluationLimitExceeded = evaluationLimitExceededDecoded
    }
}
