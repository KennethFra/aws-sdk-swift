// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchImportFindingsOutputResponseBody: Swift.Equatable {
    let failedCount: Swift.Int
    let successCount: Swift.Int
    let failedFindings: [SecurityHubClientTypes.ImportFindingsError]?
}

extension BatchImportFindingsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedCount = "FailedCount"
        case failedFindings = "FailedFindings"
        case successCount = "SuccessCount"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let failedCountDecoded = try containerValues.decode(Swift.Int.self, forKey: .failedCount)
        failedCount = failedCountDecoded
        let successCountDecoded = try containerValues.decode(Swift.Int.self, forKey: .successCount)
        successCount = successCountDecoded
        let failedFindingsContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.ImportFindingsError?].self, forKey: .failedFindings)
        var failedFindingsDecoded0:[SecurityHubClientTypes.ImportFindingsError]? = nil
        if let failedFindingsContainer = failedFindingsContainer {
            failedFindingsDecoded0 = [SecurityHubClientTypes.ImportFindingsError]()
            for structure0 in failedFindingsContainer {
                if let structure0 = structure0 {
                    failedFindingsDecoded0?.append(structure0)
                }
            }
        }
        failedFindings = failedFindingsDecoded0
    }
}
