// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authorizationConfig = "AuthorizationConfig"
        case filesystemId = "FilesystemId"
        case rootDirectory = "RootDirectory"
        case transitEncryption = "TransitEncryption"
        case transitEncryptionPort = "TransitEncryptionPort"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let authorizationConfig = authorizationConfig {
            try encodeContainer.encode(authorizationConfig, forKey: .authorizationConfig)
        }
        if let filesystemId = filesystemId {
            try encodeContainer.encode(filesystemId, forKey: .filesystemId)
        }
        if let rootDirectory = rootDirectory {
            try encodeContainer.encode(rootDirectory, forKey: .rootDirectory)
        }
        if let transitEncryption = transitEncryption {
            try encodeContainer.encode(transitEncryption, forKey: .transitEncryption)
        }
        if transitEncryptionPort != 0 {
            try encodeContainer.encode(transitEncryptionPort, forKey: .transitEncryptionPort)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorizationConfigDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails.self, forKey: .authorizationConfig)
        authorizationConfig = authorizationConfigDecoded
        let filesystemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filesystemId)
        filesystemId = filesystemIdDecoded
        let rootDirectoryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rootDirectory)
        rootDirectory = rootDirectoryDecoded
        let transitEncryptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transitEncryption)
        transitEncryption = transitEncryptionDecoded
        let transitEncryptionPortDecoded = try containerValues.decode(Swift.Int.self, forKey: .transitEncryptionPort)
        transitEncryptionPort = transitEncryptionPortDecoded
    }
}
