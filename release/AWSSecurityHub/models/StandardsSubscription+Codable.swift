// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.StandardsSubscription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case standardsArn = "StandardsArn"
        case standardsInput = "StandardsInput"
        case standardsStatus = "StandardsStatus"
        case standardsSubscriptionArn = "StandardsSubscriptionArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let standardsArn = standardsArn {
            try encodeContainer.encode(standardsArn, forKey: .standardsArn)
        }
        if let standardsInput = standardsInput {
            var standardsInputContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .standardsInput)
            for (dictKey0, standardsinputparametermap0) in standardsInput {
                try standardsInputContainer.encode(standardsinputparametermap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let standardsStatus = standardsStatus {
            try encodeContainer.encode(standardsStatus.rawValue, forKey: .standardsStatus)
        }
        if let standardsSubscriptionArn = standardsSubscriptionArn {
            try encodeContainer.encode(standardsSubscriptionArn, forKey: .standardsSubscriptionArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let standardsSubscriptionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .standardsSubscriptionArn)
        standardsSubscriptionArn = standardsSubscriptionArnDecoded
        let standardsArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .standardsArn)
        standardsArn = standardsArnDecoded
        let standardsInputContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .standardsInput)
        var standardsInputDecoded0: [Swift.String:Swift.String]? = nil
        if let standardsInputContainer = standardsInputContainer {
            standardsInputDecoded0 = [Swift.String:Swift.String]()
            for (key0, nonemptystring0) in standardsInputContainer {
                if let nonemptystring0 = nonemptystring0 {
                    standardsInputDecoded0?[key0] = nonemptystring0
                }
            }
        }
        standardsInput = standardsInputDecoded0
        let standardsStatusDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.StandardsStatus.self, forKey: .standardsStatus)
        standardsStatus = standardsStatusDecoded
    }
}
