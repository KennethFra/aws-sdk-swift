// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// provides details about an ECS cluster.
    public struct AwsEcsClusterDetails: Swift.Equatable {
        /// The short name of one or more capacity providers to associate with the cluster.
        public var capacityProviders: [Swift.String]?
        /// The setting to use to create the cluster. Specifically used to configure whether to enable CloudWatch Container Insights for the cluster.
        public var clusterSettings: [SecurityHubClientTypes.AwsEcsClusterClusterSettingsDetails]?
        /// The run command configuration for the cluster.
        public var configuration: SecurityHubClientTypes.AwsEcsClusterConfigurationDetails?
        /// The default capacity provider strategy for the cluster. The default capacity provider strategy is used when services or tasks are run without a specified launch type or capacity provider strategy.
        public var defaultCapacityProviderStrategy: [SecurityHubClientTypes.AwsEcsClusterDefaultCapacityProviderStrategyDetails]?

        public init (
            capacityProviders: [Swift.String]? = nil,
            clusterSettings: [SecurityHubClientTypes.AwsEcsClusterClusterSettingsDetails]? = nil,
            configuration: SecurityHubClientTypes.AwsEcsClusterConfigurationDetails? = nil,
            defaultCapacityProviderStrategy: [SecurityHubClientTypes.AwsEcsClusterDefaultCapacityProviderStrategyDetails]? = nil
        )
        {
            self.capacityProviders = capacityProviders
            self.clusterSettings = clusterSettings
            self.configuration = configuration
            self.defaultCapacityProviderStrategy = defaultCapacityProviderStrategy
        }
    }

}
