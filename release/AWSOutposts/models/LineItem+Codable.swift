// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OutpostsClientTypes.LineItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case catalogItemId = "CatalogItemId"
        case lineItemId = "LineItemId"
        case quantity = "Quantity"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let catalogItemId = catalogItemId {
            try encodeContainer.encode(catalogItemId, forKey: .catalogItemId)
        }
        if let lineItemId = lineItemId {
            try encodeContainer.encode(lineItemId, forKey: .lineItemId)
        }
        if quantity != 0 {
            try encodeContainer.encode(quantity, forKey: .quantity)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogItemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .catalogItemId)
        catalogItemId = catalogItemIdDecoded
        let lineItemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lineItemId)
        lineItemId = lineItemIdDecoded
        let quantityDecoded = try containerValues.decode(Swift.Int.self, forKey: .quantity)
        quantity = quantityDecoded
        let statusDecoded = try containerValues.decodeIfPresent(OutpostsClientTypes.LineItemStatus.self, forKey: .status)
        status = statusDecoded
    }
}
