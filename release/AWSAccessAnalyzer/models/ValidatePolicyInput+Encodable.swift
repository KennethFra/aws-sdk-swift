// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ValidatePolicyInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case locale
        case policyDocument
        case policyType
        case validatePolicyResourceType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let locale = locale {
            try encodeContainer.encode(locale.rawValue, forKey: .locale)
        }
        if let policyDocument = policyDocument {
            try encodeContainer.encode(policyDocument, forKey: .policyDocument)
        }
        if let policyType = policyType {
            try encodeContainer.encode(policyType.rawValue, forKey: .policyType)
        }
        if let validatePolicyResourceType = validatePolicyResourceType {
            try encodeContainer.encode(validatePolicyResourceType.rawValue, forKey: .validatePolicyResourceType)
        }
    }
}
