// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateLocationFsxWindowsInput: Swift.Equatable {
    /// The name of the Windows domain that the FSx for Windows File Server belongs to.
    public var domain: Swift.String?
    /// The Amazon Resource Name (ARN) for the FSx for Windows File Server file system.
    /// This member is required.
    public var fsxFilesystemArn: Swift.String?
    /// The password of the user who has the permissions to access files and folders in the FSx for Windows File Server file system.
    /// This member is required.
    public var password: Swift.String?
    /// The Amazon Resource Names (ARNs) of the security groups that are to use to configure the FSx for Windows File Server file system.
    /// This member is required.
    public var securityGroupArns: [Swift.String]?
    /// A subdirectory in the locationâ€™s path. This subdirectory in the Amazon FSx for Windows File Server file system is used to read data from the Amazon FSx for Windows File Server source location or write data to the FSx for Windows File Server destination.
    public var subdirectory: Swift.String?
    /// The key-value pair that represents a tag that you want to add to the resource. The value can be an empty string. This value helps you manage, filter, and search for your resources. We recommend that you create a name tag for your location.
    public var tags: [DataSyncClientTypes.TagListEntry]?
    /// The user who has the permissions to access files and folders in the FSx for Windows File Server file system. For information about choosing a user name that ensures sufficient permissions to files, folders, and metadata, see [user].
    /// This member is required.
    public var user: Swift.String?

    public init (
        domain: Swift.String? = nil,
        fsxFilesystemArn: Swift.String? = nil,
        password: Swift.String? = nil,
        securityGroupArns: [Swift.String]? = nil,
        subdirectory: Swift.String? = nil,
        tags: [DataSyncClientTypes.TagListEntry]? = nil,
        user: Swift.String? = nil
    )
    {
        self.domain = domain
        self.fsxFilesystemArn = fsxFilesystemArn
        self.password = password
        self.securityGroupArns = securityGroupArns
        self.subdirectory = subdirectory
        self.tags = tags
        self.user = user
    }
}
