// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.PostFulfillmentStatusSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failureResponse
        case successResponse
        case timeoutResponse
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let failureResponse = failureResponse {
            try encodeContainer.encode(failureResponse, forKey: .failureResponse)
        }
        if let successResponse = successResponse {
            try encodeContainer.encode(successResponse, forKey: .successResponse)
        }
        if let timeoutResponse = timeoutResponse {
            try encodeContainer.encode(timeoutResponse, forKey: .timeoutResponse)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successResponseDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ResponseSpecification.self, forKey: .successResponse)
        successResponse = successResponseDecoded
        let failureResponseDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ResponseSpecification.self, forKey: .failureResponse)
        failureResponse = failureResponseDecoded
        let timeoutResponseDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ResponseSpecification.self, forKey: .timeoutResponse)
        timeoutResponse = timeoutResponseDecoded
    }
}
