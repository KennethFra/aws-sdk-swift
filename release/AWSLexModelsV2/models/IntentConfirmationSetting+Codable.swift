// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.IntentConfirmationSetting: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case active
        case declinationResponse
        case promptSpecification
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let active = active {
            try encodeContainer.encode(active, forKey: .active)
        }
        if let declinationResponse = declinationResponse {
            try encodeContainer.encode(declinationResponse, forKey: .declinationResponse)
        }
        if let promptSpecification = promptSpecification {
            try encodeContainer.encode(promptSpecification, forKey: .promptSpecification)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let promptSpecificationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.PromptSpecification.self, forKey: .promptSpecification)
        promptSpecification = promptSpecificationDecoded
        let declinationResponseDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ResponseSpecification.self, forKey: .declinationResponse)
        declinationResponse = declinationResponseDecoded
        let activeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .active)
        active = activeDecoded
    }
}
