// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeDeployClientTypes.TimeBasedLinear: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case linearInterval
        case linearPercentage
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if linearInterval != 0 {
            try encodeContainer.encode(linearInterval, forKey: .linearInterval)
        }
        if linearPercentage != 0 {
            try encodeContainer.encode(linearPercentage, forKey: .linearPercentage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let linearPercentageDecoded = try containerValues.decode(Swift.Int.self, forKey: .linearPercentage)
        linearPercentage = linearPercentageDecoded
        let linearIntervalDecoded = try containerValues.decode(Swift.Int.self, forKey: .linearInterval)
        linearInterval = linearIntervalDecoded
    }
}
