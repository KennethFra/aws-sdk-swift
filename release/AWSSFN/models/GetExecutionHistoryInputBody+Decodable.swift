// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetExecutionHistoryInputBody: Swift.Equatable {
    let executionArn: Swift.String?
    let maxResults: Swift.Int
    let reverseOrder: Swift.Bool
    let nextToken: Swift.String?
    let includeExecutionData: Swift.Bool?
}

extension GetExecutionHistoryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executionArn
        case includeExecutionData
        case maxResults
        case nextToken
        case reverseOrder
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionArn)
        executionArn = executionArnDecoded
        let maxResultsDecoded = try containerValues.decode(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let reverseOrderDecoded = try containerValues.decode(Swift.Bool.self, forKey: .reverseOrder)
        reverseOrder = reverseOrderDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let includeExecutionDataDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeExecutionData)
        includeExecutionData = includeExecutionDataDecoded
    }
}
