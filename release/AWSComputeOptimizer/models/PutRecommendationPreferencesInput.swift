// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutRecommendationPreferencesInput: Swift.Equatable {
    /// The status of the enhanced infrastructure metrics recommendation preference to create or update. A status of Active confirms that the preference is applied in the latest recommendation refresh, and a status of Inactive confirms that it's not yet applied.
    public var enhancedInfrastructureMetrics: ComputeOptimizerClientTypes.EnhancedInfrastructureMetrics?
    /// The target resource type of the recommendation preference to create. The Ec2Instance option encompasses standalone instances and instances that are part of Auto Scaling groups. The AutoScalingGroup option encompasses only instances that are part of an Auto Scaling group.
    /// This member is required.
    public var resourceType: ComputeOptimizerClientTypes.ResourceType?
    /// An object that describes the scope of the recommendation preference to create. You can create recommendation preferences at the organization level (for management accounts of an organization only), account level, and resource level. For more information, see [Activating enhanced infrastructure metrics](https://docs.aws.amazon.com/compute-optimizer/latest/ug/enhanced-infrastructure-metrics.html) in the Compute Optimizer User Guide. You cannot create recommendation preferences for Auto Scaling groups at the organization and account levels. You can create recommendation preferences for Auto Scaling groups only at the resource level by specifying a scope name of ResourceArn and a scope value of the Auto Scaling group Amazon Resource Name (ARN). This will configure the preference for all instances that are part of the specified the Auto Scaling group.
    public var scope: ComputeOptimizerClientTypes.Scope?

    public init (
        enhancedInfrastructureMetrics: ComputeOptimizerClientTypes.EnhancedInfrastructureMetrics? = nil,
        resourceType: ComputeOptimizerClientTypes.ResourceType? = nil,
        scope: ComputeOptimizerClientTypes.Scope? = nil
    )
    {
        self.enhancedInfrastructureMetrics = enhancedInfrastructureMetrics
        self.resourceType = resourceType
        self.scope = scope
    }
}
