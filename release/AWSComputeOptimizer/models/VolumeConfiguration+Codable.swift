// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComputeOptimizerClientTypes.VolumeConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case volumeBaselineIOPS
        case volumeBaselineThroughput
        case volumeBurstIOPS
        case volumeBurstThroughput
        case volumeSize
        case volumeType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if volumeBaselineIOPS != 0 {
            try encodeContainer.encode(volumeBaselineIOPS, forKey: .volumeBaselineIOPS)
        }
        if volumeBaselineThroughput != 0 {
            try encodeContainer.encode(volumeBaselineThroughput, forKey: .volumeBaselineThroughput)
        }
        if volumeBurstIOPS != 0 {
            try encodeContainer.encode(volumeBurstIOPS, forKey: .volumeBurstIOPS)
        }
        if volumeBurstThroughput != 0 {
            try encodeContainer.encode(volumeBurstThroughput, forKey: .volumeBurstThroughput)
        }
        if volumeSize != 0 {
            try encodeContainer.encode(volumeSize, forKey: .volumeSize)
        }
        if let volumeType = volumeType {
            try encodeContainer.encode(volumeType, forKey: .volumeType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let volumeTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeType)
        volumeType = volumeTypeDecoded
        let volumeSizeDecoded = try containerValues.decode(Swift.Int.self, forKey: .volumeSize)
        volumeSize = volumeSizeDecoded
        let volumeBaselineIOPSDecoded = try containerValues.decode(Swift.Int.self, forKey: .volumeBaselineIOPS)
        volumeBaselineIOPS = volumeBaselineIOPSDecoded
        let volumeBurstIOPSDecoded = try containerValues.decode(Swift.Int.self, forKey: .volumeBurstIOPS)
        volumeBurstIOPS = volumeBurstIOPSDecoded
        let volumeBaselineThroughputDecoded = try containerValues.decode(Swift.Int.self, forKey: .volumeBaselineThroughput)
        volumeBaselineThroughput = volumeBaselineThroughputDecoded
        let volumeBurstThroughputDecoded = try containerValues.decode(Swift.Int.self, forKey: .volumeBurstThroughput)
        volumeBurstThroughput = volumeBurstThroughputDecoded
    }
}
