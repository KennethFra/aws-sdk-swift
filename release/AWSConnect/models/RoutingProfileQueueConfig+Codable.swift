// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectClientTypes.RoutingProfileQueueConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case delay = "Delay"
        case priority = "Priority"
        case queueReference = "QueueReference"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if delay != 0 {
            try encodeContainer.encode(delay, forKey: .delay)
        }
        if priority != 0 {
            try encodeContainer.encode(priority, forKey: .priority)
        }
        if let queueReference = queueReference {
            try encodeContainer.encode(queueReference, forKey: .queueReference)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queueReferenceDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.RoutingProfileQueueReference.self, forKey: .queueReference)
        queueReference = queueReferenceDecoded
        let priorityDecoded = try containerValues.decode(Swift.Int.self, forKey: .priority)
        priority = priorityDecoded
        let delayDecoded = try containerValues.decode(Swift.Int.self, forKey: .delay)
        delay = delayDecoded
    }
}
