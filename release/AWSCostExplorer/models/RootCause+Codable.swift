// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CostExplorerClientTypes.RootCause: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case linkedAccount = "LinkedAccount"
        case region = "Region"
        case service = "Service"
        case usageType = "UsageType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let linkedAccount = linkedAccount {
            try encodeContainer.encode(linkedAccount, forKey: .linkedAccount)
        }
        if let region = region {
            try encodeContainer.encode(region, forKey: .region)
        }
        if let service = service {
            try encodeContainer.encode(service, forKey: .service)
        }
        if let usageType = usageType {
            try encodeContainer.encode(usageType, forKey: .usageType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .service)
        service = serviceDecoded
        let regionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .region)
        region = regionDecoded
        let linkedAccountDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .linkedAccount)
        linkedAccount = linkedAccountDecoded
        let usageTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .usageType)
        usageType = usageTypeDecoded
    }
}
