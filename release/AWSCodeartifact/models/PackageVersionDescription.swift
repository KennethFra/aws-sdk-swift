// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeartifactClientTypes {
    /// Details about a package version.
    public struct PackageVersionDescription: Swift.Equatable {
        /// The name of the package that is displayed. The displayName varies depending on the package version's format. For example, if an npm package is named ui, is in the namespace vue, and has the format npm, then the displayName is @vue/ui.
        public var displayName: Swift.String?
        /// The format of the package version. The valid package formats are:
        ///
        /// * npm: A Node Package Manager (npm) package.
        ///
        /// * pypi: A Python Package Index (PyPI) package.
        ///
        /// * maven: A Maven package that contains compiled code in a distributable format, such as a JAR file.
        public var format: CodeartifactClientTypes.PackageFormat?
        /// The homepage associated with the package.
        public var homePage: Swift.String?
        /// Information about licenses associated with the package version.
        public var licenses: [CodeartifactClientTypes.LicenseInfo]?
        /// The namespace of the package. The package component that specifies its namespace depends on its type. For example:
        ///
        /// * The namespace of a Maven package is its groupId.
        ///
        /// * The namespace of an npm package is its scope.
        ///
        /// * A Python package does not contain a corresponding component, so Python packages do not have a namespace.
        public var namespace: Swift.String?
        /// The name of the requested package.
        public var packageName: Swift.String?
        /// A timestamp that contains the date and time the package version was published.
        public var publishedTime: ClientRuntime.Date?
        /// The revision of the package version.
        public var revision: Swift.String?
        /// The repository for the source code in the package version, or the source code used to build it.
        public var sourceCodeRepository: Swift.String?
        /// A string that contains the status of the package version. It can be one of the following:
        ///
        /// * Published
        ///
        /// * Unfinished
        ///
        /// * Unlisted
        ///
        /// * Archived
        ///
        /// * Disposed
        public var status: CodeartifactClientTypes.PackageVersionStatus?
        /// A summary of the package version. The summary is extracted from the package. The information in and detail level of the summary depends on the package version's format.
        public var summary: Swift.String?
        /// The version of the package.
        public var version: Swift.String?

        public init (
            displayName: Swift.String? = nil,
            format: CodeartifactClientTypes.PackageFormat? = nil,
            homePage: Swift.String? = nil,
            licenses: [CodeartifactClientTypes.LicenseInfo]? = nil,
            namespace: Swift.String? = nil,
            packageName: Swift.String? = nil,
            publishedTime: ClientRuntime.Date? = nil,
            revision: Swift.String? = nil,
            sourceCodeRepository: Swift.String? = nil,
            status: CodeartifactClientTypes.PackageVersionStatus? = nil,
            summary: Swift.String? = nil,
            version: Swift.String? = nil
        )
        {
            self.displayName = displayName
            self.format = format
            self.homePage = homePage
            self.licenses = licenses
            self.namespace = namespace
            self.packageName = packageName
            self.publishedTime = publishedTime
            self.revision = revision
            self.sourceCodeRepository = sourceCodeRepository
            self.status = status
            self.summary = summary
            self.version = version
        }
    }

}
