// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.RegisteredUserEmbeddingExperienceConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dashboard = "Dashboard"
        case qSearchBar = "QSearchBar"
        case quickSightConsole = "QuickSightConsole"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dashboard = dashboard {
            try encodeContainer.encode(dashboard, forKey: .dashboard)
        }
        if let qSearchBar = qSearchBar {
            try encodeContainer.encode(qSearchBar, forKey: .qSearchBar)
        }
        if let quickSightConsole = quickSightConsole {
            try encodeContainer.encode(quickSightConsole, forKey: .quickSightConsole)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dashboardDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.RegisteredUserDashboardEmbeddingConfiguration.self, forKey: .dashboard)
        dashboard = dashboardDecoded
        let quickSightConsoleDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.RegisteredUserQuickSightConsoleEmbeddingConfiguration.self, forKey: .quickSightConsole)
        quickSightConsole = quickSightConsoleDecoded
        let qSearchBarDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.RegisteredUserQSearchBarEmbeddingConfiguration.self, forKey: .qSearchBar)
        qSearchBar = qSearchBarDecoded
    }
}
