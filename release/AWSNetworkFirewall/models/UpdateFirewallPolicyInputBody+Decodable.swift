// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFirewallPolicyInputBody: Swift.Equatable {
    let updateToken: Swift.String?
    let firewallPolicyArn: Swift.String?
    let firewallPolicyName: Swift.String?
    let firewallPolicy: NetworkFirewallClientTypes.FirewallPolicy?
    let description: Swift.String?
    let dryRun: Swift.Bool
}

extension UpdateFirewallPolicyInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case dryRun = "DryRun"
        case firewallPolicy = "FirewallPolicy"
        case firewallPolicyArn = "FirewallPolicyArn"
        case firewallPolicyName = "FirewallPolicyName"
        case updateToken = "UpdateToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let updateTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .updateToken)
        updateToken = updateTokenDecoded
        let firewallPolicyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .firewallPolicyArn)
        firewallPolicyArn = firewallPolicyArnDecoded
        let firewallPolicyNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .firewallPolicyName)
        firewallPolicyName = firewallPolicyNameDecoded
        let firewallPolicyDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.FirewallPolicy.self, forKey: .firewallPolicy)
        firewallPolicy = firewallPolicyDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let dryRunDecoded = try containerValues.decode(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
