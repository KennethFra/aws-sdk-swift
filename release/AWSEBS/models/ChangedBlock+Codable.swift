// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EbsClientTypes.ChangedBlock: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blockIndex = "BlockIndex"
        case firstBlockToken = "FirstBlockToken"
        case secondBlockToken = "SecondBlockToken"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let blockIndex = blockIndex {
            try encodeContainer.encode(blockIndex, forKey: .blockIndex)
        }
        if let firstBlockToken = firstBlockToken {
            try encodeContainer.encode(firstBlockToken, forKey: .firstBlockToken)
        }
        if let secondBlockToken = secondBlockToken {
            try encodeContainer.encode(secondBlockToken, forKey: .secondBlockToken)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blockIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .blockIndex)
        blockIndex = blockIndexDecoded
        let firstBlockTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .firstBlockToken)
        firstBlockToken = firstBlockTokenDecoded
        let secondBlockTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .secondBlockToken)
        secondBlockToken = secondBlockTokenDecoded
    }
}
