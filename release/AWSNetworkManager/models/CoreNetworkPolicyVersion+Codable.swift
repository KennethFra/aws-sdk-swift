// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.CoreNetworkPolicyVersion: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alias = "Alias"
        case changeSetState = "ChangeSetState"
        case coreNetworkId = "CoreNetworkId"
        case createdAt = "CreatedAt"
        case description = "Description"
        case policyVersionId = "PolicyVersionId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let alias = alias {
            try encodeContainer.encode(alias.rawValue, forKey: .alias)
        }
        if let changeSetState = changeSetState {
            try encodeContainer.encode(changeSetState.rawValue, forKey: .changeSetState)
        }
        if let coreNetworkId = coreNetworkId {
            try encodeContainer.encode(coreNetworkId, forKey: .coreNetworkId)
        }
        if let createdAt = createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let policyVersionId = policyVersionId {
            try encodeContainer.encode(policyVersionId, forKey: .policyVersionId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let coreNetworkIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .coreNetworkId)
        coreNetworkId = coreNetworkIdDecoded
        let policyVersionIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .policyVersionId)
        policyVersionId = policyVersionIdDecoded
        let aliasDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.CoreNetworkPolicyAlias.self, forKey: .alias)
        alias = aliasDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let changeSetStateDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.ChangeSetState.self, forKey: .changeSetState)
        changeSetState = changeSetStateDecoded
    }
}
