// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ConfigClientTypes {
    /// An Config rule represents an Lambda function that you create for a custom rule or a predefined function for an Config managed rule. The function evaluates configuration items to assess whether your Amazon Web Services resources comply with your desired configurations. This function can run when Config detects a configuration change to an Amazon Web Services resource and at a periodic frequency that you choose (for example, every 24 hours). You can use the Amazon Web Services CLI and Amazon Web Services SDKs if you want to create a rule that triggers evaluations for your resources when Config delivers the configuration snapshot. For more information, see [ConfigSnapshotDeliveryProperties]. For more information about developing and using Config rules, see [Evaluating Amazon Web Services resource Configurations with Config](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html) in the Config Developer Guide.
    public struct ConfigRule: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the Config rule.
        public var configRuleArn: Swift.String?
        /// The ID of the Config rule.
        public var configRuleId: Swift.String?
        /// The name that you assign to the Config rule. The name is required if you are adding a new rule.
        public var configRuleName: Swift.String?
        /// Indicates whether the Config rule is active or is currently being deleted by Config. It can also indicate the evaluation status for the Config rule. Config sets the state of the rule to EVALUATING temporarily after you use the StartConfigRulesEvaluation request to evaluate your resources against the Config rule. Config sets the state of the rule to DELETING_RESULTS temporarily after you use the DeleteEvaluationResults request to delete the current evaluation results for the Config rule. Config temporarily sets the state of a rule to DELETING after you use the DeleteConfigRule request to delete the rule. After Config deletes the rule, the rule and all of its evaluations are erased and are no longer available.
        public var configRuleState: ConfigClientTypes.ConfigRuleState?
        /// Service principal name of the service that created the rule. The field is populated only if the service linked rule is created by a service. The field is empty if you create your own rule.
        public var createdBy: Swift.String?
        /// The description that you provide for the Config rule.
        public var description: Swift.String?
        /// A string, in JSON format, that is passed to the Config rule Lambda function.
        public var inputParameters: Swift.String?
        /// The maximum frequency with which Config runs evaluations for a rule. You can specify a value for MaximumExecutionFrequency when:
        ///
        /// * You are using an Config managed rule that is triggered at a periodic frequency.
        ///
        /// * Your custom rule is triggered when Config delivers the configuration snapshot. For more information, see [ConfigSnapshotDeliveryProperties].
        ///
        ///
        /// By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the MaximumExecutionFrequency parameter.
        public var maximumExecutionFrequency: ConfigClientTypes.MaximumExecutionFrequency?
        /// Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes. The scope can be empty.
        public var scope: ConfigClientTypes.Scope?
        /// Provides the rule owner (Amazon Web Services or customer), the rule identifier, and the notifications that cause the function to evaluate your Amazon Web Services resources.
        /// This member is required.
        public var source: ConfigClientTypes.Source?

        public init (
            configRuleArn: Swift.String? = nil,
            configRuleId: Swift.String? = nil,
            configRuleName: Swift.String? = nil,
            configRuleState: ConfigClientTypes.ConfigRuleState? = nil,
            createdBy: Swift.String? = nil,
            description: Swift.String? = nil,
            inputParameters: Swift.String? = nil,
            maximumExecutionFrequency: ConfigClientTypes.MaximumExecutionFrequency? = nil,
            scope: ConfigClientTypes.Scope? = nil,
            source: ConfigClientTypes.Source? = nil
        )
        {
            self.configRuleArn = configRuleArn
            self.configRuleId = configRuleId
            self.configRuleName = configRuleName
            self.configRuleState = configRuleState
            self.createdBy = createdBy
            self.description = description
            self.inputParameters = inputParameters
            self.maximumExecutionFrequency = maximumExecutionFrequency
            self.scope = scope
            self.source = source
        }
    }

}
