// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutConformancePackInput: Swift.Equatable {
    /// A list of ConformancePackInputParameter objects.
    public var conformancePackInputParameters: [ConfigClientTypes.ConformancePackInputParameter]?
    /// Name of the conformance pack you want to create.
    /// This member is required.
    public var conformancePackName: Swift.String?
    /// The name of the Amazon S3 bucket where Config stores conformance pack templates. This field is optional.
    public var deliveryS3Bucket: Swift.String?
    /// The prefix for the Amazon S3 bucket. This field is optional.
    public var deliveryS3KeyPrefix: Swift.String?
    /// A string containing full conformance pack template body. Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. You can only use a YAML template with one resource type, that is, config rule and a remediation action.
    public var templateBody: Swift.String?
    /// Location of file containing the template body (s3://bucketname/prefix). The uri must point to the conformance pack template (max size: 300 KB) that is located in an Amazon S3 bucket in the same region as the conformance pack. You must have access to read Amazon S3 bucket.
    public var templateS3Uri: Swift.String?

    public init (
        conformancePackInputParameters: [ConfigClientTypes.ConformancePackInputParameter]? = nil,
        conformancePackName: Swift.String? = nil,
        deliveryS3Bucket: Swift.String? = nil,
        deliveryS3KeyPrefix: Swift.String? = nil,
        templateBody: Swift.String? = nil,
        templateS3Uri: Swift.String? = nil
    )
    {
        self.conformancePackInputParameters = conformancePackInputParameters
        self.conformancePackName = conformancePackName
        self.deliveryS3Bucket = deliveryS3Bucket
        self.deliveryS3KeyPrefix = deliveryS3KeyPrefix
        self.templateBody = templateBody
        self.templateS3Uri = templateS3Uri
    }
}
