// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes.StartLambdaFunctionFailedEventAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cause
        case message
        case scheduledEventId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cause = cause {
            try encodeContainer.encode(cause.rawValue, forKey: .cause)
        }
        if let message = message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if scheduledEventId != 0 {
            try encodeContainer.encode(scheduledEventId, forKey: .scheduledEventId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scheduledEventIdDecoded = try containerValues.decode(Swift.Int.self, forKey: .scheduledEventId)
        scheduledEventId = scheduledEventIdDecoded
        let causeDecoded = try containerValues.decodeIfPresent(SwfClientTypes.StartLambdaFunctionFailedCause.self, forKey: .cause)
        cause = causeDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
    }
}
