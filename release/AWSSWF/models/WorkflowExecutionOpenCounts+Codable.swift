// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes.WorkflowExecutionOpenCounts: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case openActivityTasks
        case openChildWorkflowExecutions
        case openDecisionTasks
        case openLambdaFunctions
        case openTimers
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if openActivityTasks != 0 {
            try encodeContainer.encode(openActivityTasks, forKey: .openActivityTasks)
        }
        if openChildWorkflowExecutions != 0 {
            try encodeContainer.encode(openChildWorkflowExecutions, forKey: .openChildWorkflowExecutions)
        }
        if openDecisionTasks != 0 {
            try encodeContainer.encode(openDecisionTasks, forKey: .openDecisionTasks)
        }
        if openLambdaFunctions != 0 {
            try encodeContainer.encode(openLambdaFunctions, forKey: .openLambdaFunctions)
        }
        if openTimers != 0 {
            try encodeContainer.encode(openTimers, forKey: .openTimers)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let openActivityTasksDecoded = try containerValues.decode(Swift.Int.self, forKey: .openActivityTasks)
        openActivityTasks = openActivityTasksDecoded
        let openDecisionTasksDecoded = try containerValues.decode(Swift.Int.self, forKey: .openDecisionTasks)
        openDecisionTasks = openDecisionTasksDecoded
        let openTimersDecoded = try containerValues.decode(Swift.Int.self, forKey: .openTimers)
        openTimers = openTimersDecoded
        let openChildWorkflowExecutionsDecoded = try containerValues.decode(Swift.Int.self, forKey: .openChildWorkflowExecutions)
        openChildWorkflowExecutions = openChildWorkflowExecutionsDecoded
        let openLambdaFunctionsDecoded = try containerValues.decode(Swift.Int.self, forKey: .openLambdaFunctions)
        openLambdaFunctions = openLambdaFunctionsDecoded
    }
}
