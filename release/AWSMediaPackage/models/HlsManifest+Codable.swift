// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaPackageClientTypes.HlsManifest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case adMarkers = "adMarkers"
        case id = "id"
        case includeIframeOnlyStream = "includeIframeOnlyStream"
        case manifestName = "manifestName"
        case playlistType = "playlistType"
        case playlistWindowSeconds = "playlistWindowSeconds"
        case programDateTimeIntervalSeconds = "programDateTimeIntervalSeconds"
        case url = "url"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let adMarkers = adMarkers {
            try encodeContainer.encode(adMarkers.rawValue, forKey: .adMarkers)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let includeIframeOnlyStream = includeIframeOnlyStream {
            try encodeContainer.encode(includeIframeOnlyStream, forKey: .includeIframeOnlyStream)
        }
        if let manifestName = manifestName {
            try encodeContainer.encode(manifestName, forKey: .manifestName)
        }
        if let playlistType = playlistType {
            try encodeContainer.encode(playlistType.rawValue, forKey: .playlistType)
        }
        if let playlistWindowSeconds = playlistWindowSeconds {
            try encodeContainer.encode(playlistWindowSeconds, forKey: .playlistWindowSeconds)
        }
        if let programDateTimeIntervalSeconds = programDateTimeIntervalSeconds {
            try encodeContainer.encode(programDateTimeIntervalSeconds, forKey: .programDateTimeIntervalSeconds)
        }
        if let url = url {
            try encodeContainer.encode(url, forKey: .url)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let adMarkersDecoded = try containerValues.decodeIfPresent(MediaPackageClientTypes.AdMarkers.self, forKey: .adMarkers)
        adMarkers = adMarkersDecoded
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let includeIframeOnlyStreamDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeIframeOnlyStream)
        includeIframeOnlyStream = includeIframeOnlyStreamDecoded
        let manifestNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .manifestName)
        manifestName = manifestNameDecoded
        let playlistTypeDecoded = try containerValues.decodeIfPresent(MediaPackageClientTypes.PlaylistType.self, forKey: .playlistType)
        playlistType = playlistTypeDecoded
        let playlistWindowSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .playlistWindowSeconds)
        playlistWindowSeconds = playlistWindowSecondsDecoded
        let programDateTimeIntervalSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .programDateTimeIntervalSeconds)
        programDateTimeIntervalSeconds = programDateTimeIntervalSecondsDecoded
        let urlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .url)
        url = urlDecoded
    }
}
