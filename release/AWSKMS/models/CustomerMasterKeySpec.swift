// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KmsClientTypes {
    @available(*, deprecated, message: "This enum has been deprecated. Instead, use the KeySpec enum.")
    public enum CustomerMasterKeySpec: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case eccNistP256
        case eccNistP384
        case eccNistP521
        case eccSecgP256k1
        case rsa2048
        case rsa3072
        case rsa4096
        case symmetricDefault
        case sdkUnknown(Swift.String)

        public static var allCases: [CustomerMasterKeySpec] {
            return [
                .eccNistP256,
                .eccNistP384,
                .eccNistP521,
                .eccSecgP256k1,
                .rsa2048,
                .rsa3072,
                .rsa4096,
                .symmetricDefault,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .eccNistP256: return "ECC_NIST_P256"
            case .eccNistP384: return "ECC_NIST_P384"
            case .eccNistP521: return "ECC_NIST_P521"
            case .eccSecgP256k1: return "ECC_SECG_P256K1"
            case .rsa2048: return "RSA_2048"
            case .rsa3072: return "RSA_3072"
            case .rsa4096: return "RSA_4096"
            case .symmetricDefault: return "SYMMETRIC_DEFAULT"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = CustomerMasterKeySpec(rawValue: rawValue) ?? CustomerMasterKeySpec.sdkUnknown(rawValue)
        }
    }
}
