// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateProvisioningTemplateInput: Swift.Equatable {
    /// The description of the fleet provisioning template.
    public var description: Swift.String?
    /// True to enable the fleet provisioning template, otherwise false.
    public var enabled: Swift.Bool
    /// Creates a pre-provisioning hook template.
    public var preProvisioningHook: IotClientTypes.ProvisioningHook?
    /// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
    /// This member is required.
    public var provisioningRoleArn: Swift.String?
    /// Metadata which can be used to manage the fleet provisioning template. For URI Request parameters use format: ...key1=value1&key2=value2... For the CLI command-line parameter use format: &&tags "key1=value1&key2=value2..." For the cli-input-json file use format: "tags": "key1=value1&key2=value2..."
    public var tags: [IotClientTypes.Tag]?
    /// The JSON formatted contents of the fleet provisioning template.
    /// This member is required.
    public var templateBody: Swift.String?
    /// The name of the fleet provisioning template.
    /// This member is required.
    public var templateName: Swift.String?

    public init (
        description: Swift.String? = nil,
        enabled: Swift.Bool = false,
        preProvisioningHook: IotClientTypes.ProvisioningHook? = nil,
        provisioningRoleArn: Swift.String? = nil,
        tags: [IotClientTypes.Tag]? = nil,
        templateBody: Swift.String? = nil,
        templateName: Swift.String? = nil
    )
    {
        self.description = description
        self.enabled = enabled
        self.preProvisioningHook = preProvisioningHook
        self.provisioningRoleArn = provisioningRoleArn
        self.tags = tags
        self.templateBody = templateBody
        self.templateName = templateName
    }
}
