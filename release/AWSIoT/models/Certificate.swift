// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes {
    /// Information about a certificate.
    public struct Certificate: Swift.Equatable {
        /// The ARN of the certificate.
        public var certificateArn: Swift.String?
        /// The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
        public var certificateId: Swift.String?
        /// The mode of the certificate.
        public var certificateMode: IotClientTypes.CertificateMode?
        /// The date and time the certificate was created.
        public var creationDate: ClientRuntime.Date?
        /// The status of the certificate. The status value REGISTER_INACTIVE is deprecated and should not be used.
        public var status: IotClientTypes.CertificateStatus?

        public init (
            certificateArn: Swift.String? = nil,
            certificateId: Swift.String? = nil,
            certificateMode: IotClientTypes.CertificateMode? = nil,
            creationDate: ClientRuntime.Date? = nil,
            status: IotClientTypes.CertificateStatus? = nil
        )
        {
            self.certificateArn = certificateArn
            self.certificateId = certificateId
            self.certificateMode = certificateMode
            self.creationDate = creationDate
            self.status = status
        }
    }

}
