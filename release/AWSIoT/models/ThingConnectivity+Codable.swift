// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.ThingConnectivity: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connected
        case disconnectReason
        case timestamp
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if connected != false {
            try encodeContainer.encode(connected, forKey: .connected)
        }
        if let disconnectReason = disconnectReason {
            try encodeContainer.encode(disconnectReason, forKey: .disconnectReason)
        }
        if let timestamp = timestamp {
            try encodeContainer.encode(timestamp, forKey: .timestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectedDecoded = try containerValues.decode(Swift.Bool.self, forKey: .connected)
        connected = connectedDecoded
        let timestampDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .timestamp)
        timestamp = timestampDecoded
        let disconnectReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .disconnectReason)
        disconnectReason = disconnectReasonDecoded
    }
}
