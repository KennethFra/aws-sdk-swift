// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The input to the RegisterCACertificate operation.
public struct RegisterCACertificateInput: Swift.Equatable {
    /// Allows this CA certificate to be used for auto registration of device certificates.
    public var allowAutoRegistration: Swift.Bool
    /// The CA certificate.
    /// This member is required.
    public var caCertificate: Swift.String?
    /// Information about the registration configuration.
    public var registrationConfig: IotClientTypes.RegistrationConfig?
    /// A boolean value that specifies if the CA certificate is set to active.
    public var setAsActive: Swift.Bool
    /// Metadata which can be used to manage the CA certificate. For URI Request parameters use format: ...key1=value1&key2=value2... For the CLI command-line parameter use format: &&tags "key1=value1&key2=value2..." For the cli-input-json file use format: "tags": "key1=value1&key2=value2..."
    public var tags: [IotClientTypes.Tag]?
    /// The private key verification certificate.
    /// This member is required.
    public var verificationCertificate: Swift.String?

    public init (
        allowAutoRegistration: Swift.Bool = false,
        caCertificate: Swift.String? = nil,
        registrationConfig: IotClientTypes.RegistrationConfig? = nil,
        setAsActive: Swift.Bool = false,
        tags: [IotClientTypes.Tag]? = nil,
        verificationCertificate: Swift.String? = nil
    )
    {
        self.allowAutoRegistration = allowAutoRegistration
        self.caCertificate = caCertificate
        self.registrationConfig = registrationConfig
        self.setAsActive = setAsActive
        self.tags = tags
        self.verificationCertificate = verificationCertificate
    }
}
