// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateFleetMetricInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregationField
        case aggregationType
        case description
        case indexName
        case period
        case queryString
        case queryVersion
        case tags
        case unit
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aggregationField = aggregationField {
            try encodeContainer.encode(aggregationField, forKey: .aggregationField)
        }
        if let aggregationType = aggregationType {
            try encodeContainer.encode(aggregationType, forKey: .aggregationType)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let indexName = indexName {
            try encodeContainer.encode(indexName, forKey: .indexName)
        }
        if let period = period {
            try encodeContainer.encode(period, forKey: .period)
        }
        if let queryString = queryString {
            try encodeContainer.encode(queryString, forKey: .queryString)
        }
        if let queryVersion = queryVersion {
            try encodeContainer.encode(queryVersion, forKey: .queryVersion)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let unit = unit {
            try encodeContainer.encode(unit.rawValue, forKey: .unit)
        }
    }
}
