// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes {
    /// The job summary.
    public struct JobSummary: Swift.Equatable {
        /// The time, in seconds since the epoch, when the job completed.
        public var completedAt: ClientRuntime.Date?
        /// The time, in seconds since the epoch, when the job was created.
        public var createdAt: ClientRuntime.Date?
        /// The job ARN.
        public var jobArn: Swift.String?
        /// The unique identifier you assigned to this job when it was created.
        public var jobId: Swift.String?
        /// The time, in seconds since the epoch, when the job was last updated.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// The job summary status.
        public var status: IotClientTypes.JobStatus?
        /// Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.
        public var targetSelection: IotClientTypes.TargetSelection?
        /// The ID of the thing group.
        public var thingGroupId: Swift.String?

        public init (
            completedAt: ClientRuntime.Date? = nil,
            createdAt: ClientRuntime.Date? = nil,
            jobArn: Swift.String? = nil,
            jobId: Swift.String? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            status: IotClientTypes.JobStatus? = nil,
            targetSelection: IotClientTypes.TargetSelection? = nil,
            thingGroupId: Swift.String? = nil
        )
        {
            self.completedAt = completedAt
            self.createdAt = createdAt
            self.jobArn = jobArn
            self.jobId = jobId
            self.lastUpdatedAt = lastUpdatedAt
            self.status = status
            self.targetSelection = targetSelection
            self.thingGroupId = thingGroupId
        }
    }

}
