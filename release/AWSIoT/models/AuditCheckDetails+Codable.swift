// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.AuditCheckDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case checkCompliant
        case checkRunStatus
        case errorCode
        case message
        case nonCompliantResourcesCount
        case suppressedNonCompliantResourcesCount
        case totalResourcesCount
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let checkCompliant = checkCompliant {
            try encodeContainer.encode(checkCompliant, forKey: .checkCompliant)
        }
        if let checkRunStatus = checkRunStatus {
            try encodeContainer.encode(checkRunStatus.rawValue, forKey: .checkRunStatus)
        }
        if let errorCode = errorCode {
            try encodeContainer.encode(errorCode, forKey: .errorCode)
        }
        if let message = message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let nonCompliantResourcesCount = nonCompliantResourcesCount {
            try encodeContainer.encode(nonCompliantResourcesCount, forKey: .nonCompliantResourcesCount)
        }
        if let suppressedNonCompliantResourcesCount = suppressedNonCompliantResourcesCount {
            try encodeContainer.encode(suppressedNonCompliantResourcesCount, forKey: .suppressedNonCompliantResourcesCount)
        }
        if let totalResourcesCount = totalResourcesCount {
            try encodeContainer.encode(totalResourcesCount, forKey: .totalResourcesCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let checkRunStatusDecoded = try containerValues.decodeIfPresent(IotClientTypes.AuditCheckRunStatus.self, forKey: .checkRunStatus)
        checkRunStatus = checkRunStatusDecoded
        let checkCompliantDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .checkCompliant)
        checkCompliant = checkCompliantDecoded
        let totalResourcesCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalResourcesCount)
        totalResourcesCount = totalResourcesCountDecoded
        let nonCompliantResourcesCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .nonCompliantResourcesCount)
        nonCompliantResourcesCount = nonCompliantResourcesCountDecoded
        let suppressedNonCompliantResourcesCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .suppressedNonCompliantResourcesCount)
        suppressedNonCompliantResourcesCount = suppressedNonCompliantResourcesCountDecoded
        let errorCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
    }
}
