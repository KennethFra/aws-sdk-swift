// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes {
    /// The Job object contains details about a job.
    public struct Job: Swift.Equatable {
        /// Configuration for criteria to abort the job.
        public var abortConfig: IotClientTypes.AbortConfig?
        /// If the job was updated, describes the reason for the update.
        public var comment: Swift.String?
        /// The time, in seconds since the epoch, when the job was completed.
        public var completedAt: ClientRuntime.Date?
        /// The time, in seconds since the epoch, when the job was created.
        public var createdAt: ClientRuntime.Date?
        /// A short text description of the job.
        public var description: Swift.String?
        /// A key-value map that pairs the patterns that need to be replaced in a managed template job document schema. You can use the description of each key as a guidance to specify the inputs during runtime when creating a job.
        public var documentParameters: [Swift.String:Swift.String]?
        /// Will be true if the job was canceled with the optional force parameter set to true.
        public var forceCanceled: Swift.Bool?
        /// An ARN identifying the job with format "arn:aws:iot:region:account:job/jobId".
        public var jobArn: Swift.String?
        /// Allows you to create a staged rollout of a job.
        public var jobExecutionsRolloutConfig: IotClientTypes.JobExecutionsRolloutConfig?
        /// The unique identifier you assigned to this job when it was created.
        public var jobId: Swift.String?
        /// Details about the job process.
        public var jobProcessDetails: IotClientTypes.JobProcessDetails?
        /// The ARN of the job template used to create the job.
        public var jobTemplateArn: Swift.String?
        /// The time, in seconds since the epoch, when the job was last updated.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// The namespace used to indicate that a job is a customer-managed job. When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format. $aws/things/THING_NAME/jobs/JOB_ID/notify-namespace-NAMESPACE_ID/ The namespaceId feature is in public preview.
        public var namespaceId: Swift.String?
        /// Configuration for pre-signed S3 URLs.
        public var presignedUrlConfig: IotClientTypes.PresignedUrlConfig?
        /// If the job was updated, provides the reason code for the update.
        public var reasonCode: Swift.String?
        /// The status of the job, one of IN_PROGRESS, CANCELED, DELETION_IN_PROGRESS or COMPLETED.
        public var status: IotClientTypes.JobStatus?
        /// Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a device when the thing representing the device is added to a target group, even after the job was completed by all things originally in the group.
        public var targetSelection: IotClientTypes.TargetSelection?
        /// A list of IoT things and thing groups to which the job should be sent.
        public var targets: [Swift.String]?
        /// Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to IN_PROGRESS. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to TIMED_OUT.
        public var timeoutConfig: IotClientTypes.TimeoutConfig?

        public init (
            abortConfig: IotClientTypes.AbortConfig? = nil,
            comment: Swift.String? = nil,
            completedAt: ClientRuntime.Date? = nil,
            createdAt: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            documentParameters: [Swift.String:Swift.String]? = nil,
            forceCanceled: Swift.Bool? = nil,
            jobArn: Swift.String? = nil,
            jobExecutionsRolloutConfig: IotClientTypes.JobExecutionsRolloutConfig? = nil,
            jobId: Swift.String? = nil,
            jobProcessDetails: IotClientTypes.JobProcessDetails? = nil,
            jobTemplateArn: Swift.String? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            namespaceId: Swift.String? = nil,
            presignedUrlConfig: IotClientTypes.PresignedUrlConfig? = nil,
            reasonCode: Swift.String? = nil,
            status: IotClientTypes.JobStatus? = nil,
            targetSelection: IotClientTypes.TargetSelection? = nil,
            targets: [Swift.String]? = nil,
            timeoutConfig: IotClientTypes.TimeoutConfig? = nil
        )
        {
            self.abortConfig = abortConfig
            self.comment = comment
            self.completedAt = completedAt
            self.createdAt = createdAt
            self.description = description
            self.documentParameters = documentParameters
            self.forceCanceled = forceCanceled
            self.jobArn = jobArn
            self.jobExecutionsRolloutConfig = jobExecutionsRolloutConfig
            self.jobId = jobId
            self.jobProcessDetails = jobProcessDetails
            self.jobTemplateArn = jobTemplateArn
            self.lastUpdatedAt = lastUpdatedAt
            self.namespaceId = namespaceId
            self.presignedUrlConfig = presignedUrlConfig
            self.reasonCode = reasonCode
            self.status = status
            self.targetSelection = targetSelection
            self.targets = targets
            self.timeoutConfig = timeoutConfig
        }
    }

}
