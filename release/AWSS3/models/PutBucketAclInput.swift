// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutBucketAclInput: Swift.Equatable {
    /// The canned ACL to apply to the bucket.
    public var aCL: S3ClientTypes.BucketCannedACL?
    /// Contains the elements that set the ACL permissions for an object per grantee.
    public var accessControlPolicy: S3ClientTypes.AccessControlPolicy?
    /// The bucket to which to apply the ACL.
    /// This member is required.
    public var bucket: Swift.String?
    /// The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message integrity check to verify that the request body was not corrupted in transit. For more information, go to [RFC 1864.](http://www.ietf.org/rfc/rfc1864.txt) For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
    public var contentMD5: Swift.String?
    /// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    public var expectedBucketOwner: Swift.String?
    /// Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.
    public var grantFullControl: Swift.String?
    /// Allows grantee to list the objects in the bucket.
    public var grantRead: Swift.String?
    /// Allows grantee to read the bucket ACL.
    public var grantReadACP: Swift.String?
    /// Allows grantee to create new objects in the bucket. For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.
    public var grantWrite: Swift.String?
    /// Allows grantee to write the ACL for the applicable bucket.
    public var grantWriteACP: Swift.String?

    public init (
        aCL: S3ClientTypes.BucketCannedACL? = nil,
        accessControlPolicy: S3ClientTypes.AccessControlPolicy? = nil,
        bucket: Swift.String? = nil,
        contentMD5: Swift.String? = nil,
        expectedBucketOwner: Swift.String? = nil,
        grantFullControl: Swift.String? = nil,
        grantRead: Swift.String? = nil,
        grantReadACP: Swift.String? = nil,
        grantWrite: Swift.String? = nil,
        grantWriteACP: Swift.String? = nil
    )
    {
        self.aCL = aCL
        self.accessControlPolicy = accessControlPolicy
        self.bucket = bucket
        self.contentMD5 = contentMD5
        self.expectedBucketOwner = expectedBucketOwner
        self.grantFullControl = grantFullControl
        self.grantRead = grantRead
        self.grantReadACP = grantReadACP
        self.grantWrite = grantWrite
        self.grantWriteACP = grantWriteACP
    }
}
