// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RdsClientTypes {
    /// Contains the installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.
    public struct InstallationMedia: Swift.Equatable {
        /// The custom Availability Zone (AZ) that contains the installation media.
        public var customAvailabilityZoneId: Swift.String?
        /// The DB engine.
        public var engine: Swift.String?
        /// The path to the installation medium for the DB engine.
        public var engineInstallationMediaPath: Swift.String?
        /// The engine version of the DB engine.
        public var engineVersion: Swift.String?
        /// If an installation media failure occurred, the cause of the failure.
        public var failureCause: RdsClientTypes.InstallationMediaFailureCause?
        /// The installation medium ID.
        public var installationMediaId: Swift.String?
        /// The path to the installation medium for the operating system associated with the DB engine.
        public var oSInstallationMediaPath: Swift.String?
        /// The status of the installation medium.
        public var status: Swift.String?

        public init (
            customAvailabilityZoneId: Swift.String? = nil,
            engine: Swift.String? = nil,
            engineInstallationMediaPath: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            failureCause: RdsClientTypes.InstallationMediaFailureCause? = nil,
            installationMediaId: Swift.String? = nil,
            oSInstallationMediaPath: Swift.String? = nil,
            status: Swift.String? = nil
        )
        {
            self.customAvailabilityZoneId = customAvailabilityZoneId
            self.engine = engine
            self.engineInstallationMediaPath = engineInstallationMediaPath
            self.engineVersion = engineVersion
            self.failureCause = failureCause
            self.installationMediaId = installationMediaId
            self.oSInstallationMediaPath = oSInstallationMediaPath
            self.status = status
        }
    }

}
