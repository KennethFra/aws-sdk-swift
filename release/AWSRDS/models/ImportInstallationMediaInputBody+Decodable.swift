// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ImportInstallationMediaInputBody: Swift.Equatable {
    let customAvailabilityZoneId: Swift.String?
    let engine: Swift.String?
    let engineVersion: Swift.String?
    let engineInstallationMediaPath: Swift.String?
    let oSInstallationMediaPath: Swift.String?
}

extension ImportInstallationMediaInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customAvailabilityZoneId = "CustomAvailabilityZoneId"
        case engine = "Engine"
        case engineInstallationMediaPath = "EngineInstallationMediaPath"
        case engineVersion = "EngineVersion"
        case oSInstallationMediaPath = "OSInstallationMediaPath"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customAvailabilityZoneIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customAvailabilityZoneId)
        customAvailabilityZoneId = customAvailabilityZoneIdDecoded
        let engineDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .engine)
        engine = engineDecoded
        let engineVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .engineVersion)
        engineVersion = engineVersionDecoded
        let engineInstallationMediaPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .engineInstallationMediaPath)
        engineInstallationMediaPath = engineInstallationMediaPathDecoded
        let oSInstallationMediaPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .oSInstallationMediaPath)
        oSInstallationMediaPath = oSInstallationMediaPathDecoded
    }
}
