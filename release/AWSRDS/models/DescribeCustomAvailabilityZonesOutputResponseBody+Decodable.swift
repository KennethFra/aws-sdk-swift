// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCustomAvailabilityZonesOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let customAvailabilityZones: [RdsClientTypes.CustomAvailabilityZone]?
}

extension DescribeCustomAvailabilityZonesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customAvailabilityZones = "CustomAvailabilityZones"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeCustomAvailabilityZonesResult"))
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        if containerValues.contains(.customAvailabilityZones) {
            struct KeyVal0{struct CustomAvailabilityZone{}}
            let customAvailabilityZonesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.CustomAvailabilityZone>.CodingKeys.self, forKey: .customAvailabilityZones)
            if let customAvailabilityZonesWrappedContainer = customAvailabilityZonesWrappedContainer {
                let customAvailabilityZonesContainer = try customAvailabilityZonesWrappedContainer.decodeIfPresent([RdsClientTypes.CustomAvailabilityZone].self, forKey: .member)
                var customAvailabilityZonesBuffer:[RdsClientTypes.CustomAvailabilityZone]? = nil
                if let customAvailabilityZonesContainer = customAvailabilityZonesContainer {
                    customAvailabilityZonesBuffer = [RdsClientTypes.CustomAvailabilityZone]()
                    for structureContainer0 in customAvailabilityZonesContainer {
                        customAvailabilityZonesBuffer?.append(structureContainer0)
                    }
                }
                customAvailabilityZones = customAvailabilityZonesBuffer
            } else {
                customAvailabilityZones = []
            }
        } else {
            customAvailabilityZones = nil
        }
    }
}
