// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApiGatewayClientTypes.QuotaSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case limit
        case offset
        case period
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if limit != 0 {
            try encodeContainer.encode(limit, forKey: .limit)
        }
        if offset != 0 {
            try encodeContainer.encode(offset, forKey: .offset)
        }
        if let period = period {
            try encodeContainer.encode(period.rawValue, forKey: .period)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitDecoded = try containerValues.decode(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let offsetDecoded = try containerValues.decode(Swift.Int.self, forKey: .offset)
        offset = offsetDecoded
        let periodDecoded = try containerValues.decodeIfPresent(ApiGatewayClientTypes.QuotaPeriodType.self, forKey: .period)
        period = periodDecoded
    }
}
