// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ApiGatewayClientTypes {
    /// Represents the data structure of a method's request or response payload. A request model defines the data structure of the client-supplied request payload. A response model defines the data structure of the response payload returned by the back end. Although not required, models are useful for mapping payloads between the front end and back end. A model is used for generating an API's SDK, validating the input request body, and creating a skeletal mapping template. [Method], [MethodResponse], [Models and Mappings](https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html)
    public struct Model: Swift.Equatable {
        /// The content-type for the model.
        public var contentType: Swift.String?
        /// The description of the model.
        public var description: Swift.String?
        /// The identifier for the model resource.
        public var id: Swift.String?
        /// The name of the model. Must be an alphanumeric string.
        public var name: Swift.String?
        /// The schema for the model. For application/json models, this should be [JSON schema draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) model. Do not include "\*/" characters in the description of any properties because such "\*/" characters may be interpreted as the closing marker for comments in some languages, such as Java or JavaScript, causing the installation of your API's SDK generated by API Gateway to fail.
        public var schema: Swift.String?

        public init (
            contentType: Swift.String? = nil,
            description: Swift.String? = nil,
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            schema: Swift.String? = nil
        )
        {
            self.contentType = contentType
            self.description = description
            self.id = id
            self.name = name
            self.schema = schema
        }
    }

}
