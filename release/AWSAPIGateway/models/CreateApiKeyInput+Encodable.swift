// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateApiKeyInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customerId
        case description
        case enabled
        case generateDistinctId
        case name
        case stageKeys
        case tags
        case value
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customerId = customerId {
            try encodeContainer.encode(customerId, forKey: .customerId)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if enabled != false {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if generateDistinctId != false {
            try encodeContainer.encode(generateDistinctId, forKey: .generateDistinctId)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let stageKeys = stageKeys {
            var stageKeysContainer = encodeContainer.nestedUnkeyedContainer(forKey: .stageKeys)
            for listofstagekeys0 in stageKeys {
                try stageKeysContainer.encode(listofstagekeys0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, mapofstringtostring0) in tags {
                try tagsContainer.encode(mapofstringtostring0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let value = value {
            try encodeContainer.encode(value, forKey: .value)
        }
    }
}
