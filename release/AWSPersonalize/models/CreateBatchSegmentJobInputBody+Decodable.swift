// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBatchSegmentJobInputBody: Swift.Equatable {
    let jobName: Swift.String?
    let solutionVersionArn: Swift.String?
    let filterArn: Swift.String?
    let numResults: Swift.Int?
    let jobInput: PersonalizeClientTypes.BatchSegmentJobInput?
    let jobOutput: PersonalizeClientTypes.BatchSegmentJobOutput?
    let roleArn: Swift.String?
}

extension CreateBatchSegmentJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterArn
        case jobInput
        case jobName
        case jobOutput
        case numResults
        case roleArn
        case solutionVersionArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobName)
        jobName = jobNameDecoded
        let solutionVersionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .solutionVersionArn)
        solutionVersionArn = solutionVersionArnDecoded
        let filterArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterArn)
        filterArn = filterArnDecoded
        let numResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numResults)
        numResults = numResultsDecoded
        let jobInputDecoded = try containerValues.decodeIfPresent(PersonalizeClientTypes.BatchSegmentJobInput.self, forKey: .jobInput)
        jobInput = jobInputDecoded
        let jobOutputDecoded = try containerValues.decodeIfPresent(PersonalizeClientTypes.BatchSegmentJobOutput.self, forKey: .jobOutput)
        jobOutput = jobOutputDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
