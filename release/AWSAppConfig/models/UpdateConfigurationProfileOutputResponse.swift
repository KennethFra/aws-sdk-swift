// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateConfigurationProfileOutputResponse: Swift.Equatable {
    /// The application ID.
    public var applicationId: Swift.String?
    /// The configuration profile description.
    public var description: Swift.String?
    /// The configuration profile ID.
    public var id: Swift.String?
    /// The URI location of the configuration.
    public var locationUri: Swift.String?
    /// The name of the configuration profile.
    public var name: Swift.String?
    /// The ARN of an IAM role with permission to access the configuration at the specified LocationUri.
    public var retrievalRoleArn: Swift.String?
    /// The type of configurations that the configuration profile contains. A configuration can be a feature flag used for enabling or disabling new features or a free-form configuration used for distributing configurations to your application.
    public var type: Swift.String?
    /// A list of methods for validating the configuration.
    public var validators: [AppConfigClientTypes.Validator]?

    public init (
        applicationId: Swift.String? = nil,
        description: Swift.String? = nil,
        id: Swift.String? = nil,
        locationUri: Swift.String? = nil,
        name: Swift.String? = nil,
        retrievalRoleArn: Swift.String? = nil,
        type: Swift.String? = nil,
        validators: [AppConfigClientTypes.Validator]? = nil
    )
    {
        self.applicationId = applicationId
        self.description = description
        self.id = id
        self.locationUri = locationUri
        self.name = name
        self.retrievalRoleArn = retrievalRoleArn
        self.type = type
        self.validators = validators
    }
}
