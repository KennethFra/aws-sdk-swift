// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InspectorClientTypes.InspectorServiceAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assessmentRunArn
        case rulesPackageArn
        case schemaVersion
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let assessmentRunArn = assessmentRunArn {
            try encodeContainer.encode(assessmentRunArn, forKey: .assessmentRunArn)
        }
        if let rulesPackageArn = rulesPackageArn {
            try encodeContainer.encode(rulesPackageArn, forKey: .rulesPackageArn)
        }
        if schemaVersion != 0 {
            try encodeContainer.encode(schemaVersion, forKey: .schemaVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaVersionDecoded = try containerValues.decode(Swift.Int.self, forKey: .schemaVersion)
        schemaVersion = schemaVersionDecoded
        let assessmentRunArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assessmentRunArn)
        assessmentRunArn = assessmentRunArnDecoded
        let rulesPackageArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rulesPackageArn)
        rulesPackageArn = rulesPackageArnDecoded
    }
}
