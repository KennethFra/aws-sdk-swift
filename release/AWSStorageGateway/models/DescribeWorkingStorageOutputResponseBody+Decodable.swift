// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeWorkingStorageOutputResponseBody: Swift.Equatable {
    let gatewayARN: Swift.String?
    let diskIds: [Swift.String]?
    let workingStorageUsedInBytes: Swift.Int
    let workingStorageAllocatedInBytes: Swift.Int
}

extension DescribeWorkingStorageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case diskIds = "DiskIds"
        case gatewayARN = "GatewayARN"
        case workingStorageAllocatedInBytes = "WorkingStorageAllocatedInBytes"
        case workingStorageUsedInBytes = "WorkingStorageUsedInBytes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let diskIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .diskIds)
        var diskIdsDecoded0:[Swift.String]? = nil
        if let diskIdsContainer = diskIdsContainer {
            diskIdsDecoded0 = [Swift.String]()
            for string0 in diskIdsContainer {
                if let string0 = string0 {
                    diskIdsDecoded0?.append(string0)
                }
            }
        }
        diskIds = diskIdsDecoded0
        let workingStorageUsedInBytesDecoded = try containerValues.decode(Swift.Int.self, forKey: .workingStorageUsedInBytes)
        workingStorageUsedInBytes = workingStorageUsedInBytesDecoded
        let workingStorageAllocatedInBytesDecoded = try containerValues.decode(Swift.Int.self, forKey: .workingStorageAllocatedInBytes)
        workingStorageAllocatedInBytes = workingStorageAllocatedInBytesDecoded
    }
}
