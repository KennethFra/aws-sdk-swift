// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StorageGatewayClientTypes.VolumeInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gatewayARN = "GatewayARN"
        case gatewayId = "GatewayId"
        case volumeARN = "VolumeARN"
        case volumeAttachmentStatus = "VolumeAttachmentStatus"
        case volumeId = "VolumeId"
        case volumeSizeInBytes = "VolumeSizeInBytes"
        case volumeType = "VolumeType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let gatewayARN = gatewayARN {
            try encodeContainer.encode(gatewayARN, forKey: .gatewayARN)
        }
        if let gatewayId = gatewayId {
            try encodeContainer.encode(gatewayId, forKey: .gatewayId)
        }
        if let volumeARN = volumeARN {
            try encodeContainer.encode(volumeARN, forKey: .volumeARN)
        }
        if let volumeAttachmentStatus = volumeAttachmentStatus {
            try encodeContainer.encode(volumeAttachmentStatus, forKey: .volumeAttachmentStatus)
        }
        if let volumeId = volumeId {
            try encodeContainer.encode(volumeId, forKey: .volumeId)
        }
        if volumeSizeInBytes != 0 {
            try encodeContainer.encode(volumeSizeInBytes, forKey: .volumeSizeInBytes)
        }
        if let volumeType = volumeType {
            try encodeContainer.encode(volumeType, forKey: .volumeType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let volumeARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeARN)
        volumeARN = volumeARNDecoded
        let volumeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeId)
        volumeId = volumeIdDecoded
        let gatewayARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let gatewayIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayId)
        gatewayId = gatewayIdDecoded
        let volumeTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeType)
        volumeType = volumeTypeDecoded
        let volumeSizeInBytesDecoded = try containerValues.decode(Swift.Int.self, forKey: .volumeSizeInBytes)
        volumeSizeInBytes = volumeSizeInBytesDecoded
        let volumeAttachmentStatusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeAttachmentStatus)
        volumeAttachmentStatus = volumeAttachmentStatusDecoded
    }
}
