// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.GlobalTableGlobalSecondaryIndexSettingsUpdate: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case indexName = "IndexName"
        case provisionedWriteCapacityAutoScalingSettingsUpdate = "ProvisionedWriteCapacityAutoScalingSettingsUpdate"
        case provisionedWriteCapacityUnits = "ProvisionedWriteCapacityUnits"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let indexName = indexName {
            try encodeContainer.encode(indexName, forKey: .indexName)
        }
        if let provisionedWriteCapacityAutoScalingSettingsUpdate = provisionedWriteCapacityAutoScalingSettingsUpdate {
            try encodeContainer.encode(provisionedWriteCapacityAutoScalingSettingsUpdate, forKey: .provisionedWriteCapacityAutoScalingSettingsUpdate)
        }
        if let provisionedWriteCapacityUnits = provisionedWriteCapacityUnits {
            try encodeContainer.encode(provisionedWriteCapacityUnits, forKey: .provisionedWriteCapacityUnits)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let provisionedWriteCapacityUnitsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .provisionedWriteCapacityUnits)
        provisionedWriteCapacityUnits = provisionedWriteCapacityUnitsDecoded
        let provisionedWriteCapacityAutoScalingSettingsUpdateDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.AutoScalingSettingsUpdate.self, forKey: .provisionedWriteCapacityAutoScalingSettingsUpdate)
        provisionedWriteCapacityAutoScalingSettingsUpdate = provisionedWriteCapacityAutoScalingSettingsUpdateDecoded
    }
}
