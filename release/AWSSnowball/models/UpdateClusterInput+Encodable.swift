// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateClusterInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addressId = "AddressId"
        case clusterId = "ClusterId"
        case description = "Description"
        case forwardingAddressId = "ForwardingAddressId"
        case notification = "Notification"
        case onDeviceServiceConfiguration = "OnDeviceServiceConfiguration"
        case resources = "Resources"
        case roleARN = "RoleARN"
        case shippingOption = "ShippingOption"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let addressId = addressId {
            try encodeContainer.encode(addressId, forKey: .addressId)
        }
        if let clusterId = clusterId {
            try encodeContainer.encode(clusterId, forKey: .clusterId)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let forwardingAddressId = forwardingAddressId {
            try encodeContainer.encode(forwardingAddressId, forKey: .forwardingAddressId)
        }
        if let notification = notification {
            try encodeContainer.encode(notification, forKey: .notification)
        }
        if let onDeviceServiceConfiguration = onDeviceServiceConfiguration {
            try encodeContainer.encode(onDeviceServiceConfiguration, forKey: .onDeviceServiceConfiguration)
        }
        if let resources = resources {
            try encodeContainer.encode(resources, forKey: .resources)
        }
        if let roleARN = roleARN {
            try encodeContainer.encode(roleARN, forKey: .roleARN)
        }
        if let shippingOption = shippingOption {
            try encodeContainer.encode(shippingOption.rawValue, forKey: .shippingOption)
        }
    }
}
