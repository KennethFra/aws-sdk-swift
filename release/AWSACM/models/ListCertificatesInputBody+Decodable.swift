// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCertificatesInputBody: Swift.Equatable {
    let certificateStatuses: [AcmClientTypes.CertificateStatus]?
    let includes: AcmClientTypes.Filters?
    let nextToken: Swift.String?
    let maxItems: Swift.Int?
}

extension ListCertificatesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateStatuses = "CertificateStatuses"
        case includes = "Includes"
        case maxItems = "MaxItems"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateStatusesContainer = try containerValues.decodeIfPresent([AcmClientTypes.CertificateStatus?].self, forKey: .certificateStatuses)
        var certificateStatusesDecoded0:[AcmClientTypes.CertificateStatus]? = nil
        if let certificateStatusesContainer = certificateStatusesContainer {
            certificateStatusesDecoded0 = [AcmClientTypes.CertificateStatus]()
            for string0 in certificateStatusesContainer {
                if let string0 = string0 {
                    certificateStatusesDecoded0?.append(string0)
                }
            }
        }
        certificateStatuses = certificateStatusesDecoded0
        let includesDecoded = try containerValues.decodeIfPresent(AcmClientTypes.Filters.self, forKey: .includes)
        includes = includesDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxItemsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxItems)
        maxItems = maxItemsDecoded
    }
}
