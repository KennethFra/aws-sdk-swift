// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotWirelessClientTypes.FPorts: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clockSync = "ClockSync"
        case fuota = "Fuota"
        case multicast = "Multicast"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clockSync = clockSync {
            try encodeContainer.encode(clockSync, forKey: .clockSync)
        }
        if let fuota = fuota {
            try encodeContainer.encode(fuota, forKey: .fuota)
        }
        if let multicast = multicast {
            try encodeContainer.encode(multicast, forKey: .multicast)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fuotaDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .fuota)
        fuota = fuotaDecoded
        let multicastDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .multicast)
        multicast = multicastDecoded
        let clockSyncDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .clockSync)
        clockSync = clockSyncDecoded
    }
}
