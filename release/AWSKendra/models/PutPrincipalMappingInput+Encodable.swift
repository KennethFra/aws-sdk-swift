// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutPrincipalMappingInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSourceId = "DataSourceId"
        case groupId = "GroupId"
        case groupMembers = "GroupMembers"
        case indexId = "IndexId"
        case orderingId = "OrderingId"
        case roleArn = "RoleArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataSourceId = dataSourceId {
            try encodeContainer.encode(dataSourceId, forKey: .dataSourceId)
        }
        if let groupId = groupId {
            try encodeContainer.encode(groupId, forKey: .groupId)
        }
        if let groupMembers = groupMembers {
            try encodeContainer.encode(groupMembers, forKey: .groupMembers)
        }
        if let indexId = indexId {
            try encodeContainer.encode(indexId, forKey: .indexId)
        }
        if let orderingId = orderingId {
            try encodeContainer.encode(orderingId, forKey: .orderingId)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }
}
