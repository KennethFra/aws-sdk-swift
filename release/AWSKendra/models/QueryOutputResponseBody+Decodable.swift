// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct QueryOutputResponseBody: Swift.Equatable {
    let queryId: Swift.String?
    let resultItems: [KendraClientTypes.QueryResultItem]?
    let facetResults: [KendraClientTypes.FacetResult]?
    let totalNumberOfResults: Swift.Int?
}

extension QueryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case facetResults = "FacetResults"
        case queryId = "QueryId"
        case resultItems = "ResultItems"
        case totalNumberOfResults = "TotalNumberOfResults"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryId)
        queryId = queryIdDecoded
        let resultItemsContainer = try containerValues.decodeIfPresent([KendraClientTypes.QueryResultItem?].self, forKey: .resultItems)
        var resultItemsDecoded0:[KendraClientTypes.QueryResultItem]? = nil
        if let resultItemsContainer = resultItemsContainer {
            resultItemsDecoded0 = [KendraClientTypes.QueryResultItem]()
            for structure0 in resultItemsContainer {
                if let structure0 = structure0 {
                    resultItemsDecoded0?.append(structure0)
                }
            }
        }
        resultItems = resultItemsDecoded0
        let facetResultsContainer = try containerValues.decodeIfPresent([KendraClientTypes.FacetResult?].self, forKey: .facetResults)
        var facetResultsDecoded0:[KendraClientTypes.FacetResult]? = nil
        if let facetResultsContainer = facetResultsContainer {
            facetResultsDecoded0 = [KendraClientTypes.FacetResult]()
            for structure0 in facetResultsContainer {
                if let structure0 = structure0 {
                    facetResultsDecoded0?.append(structure0)
                }
            }
        }
        facetResults = facetResultsDecoded0
        let totalNumberOfResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalNumberOfResults)
        totalNumberOfResults = totalNumberOfResultsDecoded
    }
}
