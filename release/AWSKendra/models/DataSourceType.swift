// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KendraClientTypes {
    public enum DataSourceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case confluence
        case custom
        case database
        case googledrive
        case onedrive
        case s3
        case salesforce
        case servicenow
        case sharepoint
        case webcrawler
        case workdocs
        case sdkUnknown(Swift.String)

        public static var allCases: [DataSourceType] {
            return [
                .confluence,
                .custom,
                .database,
                .googledrive,
                .onedrive,
                .s3,
                .salesforce,
                .servicenow,
                .sharepoint,
                .webcrawler,
                .workdocs,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .confluence: return "CONFLUENCE"
            case .custom: return "CUSTOM"
            case .database: return "DATABASE"
            case .googledrive: return "GOOGLEDRIVE"
            case .onedrive: return "ONEDRIVE"
            case .s3: return "S3"
            case .salesforce: return "SALESFORCE"
            case .servicenow: return "SERVICENOW"
            case .sharepoint: return "SHAREPOINT"
            case .webcrawler: return "WEBCRAWLER"
            case .workdocs: return "WORKDOCS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = DataSourceType(rawValue: rawValue) ?? DataSourceType.sdkUnknown(rawValue)
        }
    }
}
