// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension BatchClientTypes {
    /// An object representing the attributes of a compute environment that can be updated. For more information, see [Compute Environments](https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html) in the Batch User Guide.
    public struct ComputeResourceUpdate: Swift.Equatable {
        /// The desired number of Amazon EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
        public var desiredvCpus: Swift.Int
        /// The maximum number of Amazon EC2 vCPUs that an environment can reach. With both BEST_FIT_PROGRESSIVE and SPOT_CAPACITY_OPTIMIZED allocation strategies, Batch might need to exceed maxvCpus to meet your capacity requirements. In this event, Batch never exceeds maxvCpus by more than a single instance. That is, no more than a single instance from among those specified in your compute environment.
        public var maxvCpus: Swift.Int
        /// The minimum number of Amazon EC2 vCPUs that an environment should maintain. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
        public var minvCpus: Swift.Int
        /// The Amazon EC2 security groups associated with instances launched in the compute environment. This parameter is required for Fargate compute resources, where it can contain up to 5 security groups. This can't be specified for EC2 compute resources. Providing an empty list is handled as if this parameter wasn't specified and no change is made.
        public var securityGroupIds: [Swift.String]?
        /// The VPC subnets where the compute resources are launched. Fargate compute resources can contain up to 16 subnets. Providing an empty list will be handled as if this parameter wasn't specified and no change is made. This can't be specified for EC2 compute resources. For more information, see [VPCs and Subnets](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html) in the Amazon VPC User Guide.
        public var subnets: [Swift.String]?

        public init (
            desiredvCpus: Swift.Int = 0,
            maxvCpus: Swift.Int = 0,
            minvCpus: Swift.Int = 0,
            securityGroupIds: [Swift.String]? = nil,
            subnets: [Swift.String]? = nil
        )
        {
            self.desiredvCpus = desiredvCpus
            self.maxvCpus = maxvCpus
            self.minvCpus = minvCpus
            self.securityGroupIds = securityGroupIds
            self.subnets = subnets
        }
    }

}
