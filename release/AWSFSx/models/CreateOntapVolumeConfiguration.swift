// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FSxClientTypes {
    /// Specifies the configuration of the ONTAP volume that you are creating.
    public struct CreateOntapVolumeConfiguration: Swift.Equatable {
        /// Specifies the location in the SVM's namespace where the volume is mounted. The JunctionPath must have a leading forward slash, such as /vol3.
        /// This member is required.
        public var junctionPath: Swift.String?
        /// The security style for the volume. Specify one of the following values:
        ///
        /// * UNIX if the file system is managed by a UNIX administrator, the majority of users are NFS clients, and an application accessing the data uses a UNIX user as the service account. UNIX is the default.
        ///
        /// * NTFS if the file system is managed by a Windows administrator, the majority of users are SMB clients, and an application accessing the data uses a Windows user as the service account.
        ///
        /// * MIXED if the file system is managed by both UNIX and Windows administrators and users consist of both NFS and SMB clients.
        public var securityStyle: FSxClientTypes.SecurityStyle?
        /// Specifies the size of the volume, in megabytes (MB), that you are creating.
        /// This member is required.
        public var sizeInMegabytes: Swift.Int?
        /// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
        /// This member is required.
        public var storageEfficiencyEnabled: Swift.Bool?
        /// Specifies the ONTAP SVM in which to create the volume.
        /// This member is required.
        public var storageVirtualMachineId: Swift.String?
        /// Describes the data tiering policy for an ONTAP volume. When enabled, Amazon FSx for ONTAP's intelligent tiering automatically transitions a volume's data between the file system's primary storage and capacity pool storage based on your access patterns.
        public var tieringPolicy: FSxClientTypes.TieringPolicy?

        public init (
            junctionPath: Swift.String? = nil,
            securityStyle: FSxClientTypes.SecurityStyle? = nil,
            sizeInMegabytes: Swift.Int? = nil,
            storageEfficiencyEnabled: Swift.Bool? = nil,
            storageVirtualMachineId: Swift.String? = nil,
            tieringPolicy: FSxClientTypes.TieringPolicy? = nil
        )
        {
            self.junctionPath = junctionPath
            self.securityStyle = securityStyle
            self.sizeInMegabytes = sizeInMegabytes
            self.storageEfficiencyEnabled = storageEfficiencyEnabled
            self.storageVirtualMachineId = storageVirtualMachineId
            self.tieringPolicy = tieringPolicy
        }
    }

}
