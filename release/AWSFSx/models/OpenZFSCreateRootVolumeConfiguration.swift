// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FSxClientTypes {
    /// The configuration of an Amazon FSx for OpenZFS root volume.
    public struct OpenZFSCreateRootVolumeConfiguration: Swift.Equatable {
        /// A Boolean value indicating whether tags for the volume should be copied to snapshots. This value defaults to false. If it's set to true, all tags for the volume are copied to snapshots where the user doesn't specify tags. If this value is true and you specify one or more tags, only the specified tags are copied to snapshots. If you specify one or more tags when creating the snapshot, no tags are copied from the volume, regardless of this value.
        public var copyTagsToSnapshots: Swift.Bool?
        /// Specifies the method used to compress the data on the volume. Unless the compression type is specified, volumes inherit the DataCompressionType value of their parent volume.
        ///
        /// * NONE - Doesn't compress the data on the volume.
        ///
        /// * ZSTD - Compresses the data in the volume using the ZStandard (ZSTD) compression algorithm. This algorithm reduces the amount of space used on your volume and has very little impact on compute resources.
        public var dataCompressionType: FSxClientTypes.OpenZFSDataCompressionType?
        /// The configuration object for mounting a file system.
        public var nfsExports: [FSxClientTypes.OpenZFSNfsExport]?
        /// A Boolean value indicating whether the volume is read-only. Setting this value to true can be useful after you have completed changes to a volume and no longer want changes to occur.
        public var readOnly: Swift.Bool?
        /// An object specifying how much storage users or groups can use on the volume.
        public var userAndGroupQuotas: [FSxClientTypes.OpenZFSUserOrGroupQuota]?

        public init (
            copyTagsToSnapshots: Swift.Bool? = nil,
            dataCompressionType: FSxClientTypes.OpenZFSDataCompressionType? = nil,
            nfsExports: [FSxClientTypes.OpenZFSNfsExport]? = nil,
            readOnly: Swift.Bool? = nil,
            userAndGroupQuotas: [FSxClientTypes.OpenZFSUserOrGroupQuota]? = nil
        )
        {
            self.copyTagsToSnapshots = copyTagsToSnapshots
            self.dataCompressionType = dataCompressionType
            self.nfsExports = nfsExports
            self.readOnly = readOnly
            self.userAndGroupQuotas = userAndGroupQuotas
        }
    }

}
