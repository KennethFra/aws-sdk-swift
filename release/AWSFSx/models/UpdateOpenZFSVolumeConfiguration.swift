// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FSxClientTypes {
    /// Used to specify changes to the OpenZFS configuration for the volume that you are updating.
    public struct UpdateOpenZFSVolumeConfiguration: Swift.Equatable {
        /// Specifies the method used to compress the data on the volume. Unless the compression type is specified, volumes inherit the DataCompressionType value of their parent volume.
        ///
        /// * NONE - Doesn't compress the data on the volume.
        ///
        /// * ZSTD - Compresses the data in the volume using the Zstandard (ZSTD) compression algorithm. This algorithm reduces the amount of space used on your volume and has very little impact on compute resources.
        public var dataCompressionType: FSxClientTypes.OpenZFSDataCompressionType?
        /// The configuration object for mounting a Network File System (NFS) file system.
        public var nfsExports: [FSxClientTypes.OpenZFSNfsExport]?
        /// A Boolean value indicating whether the volume is read-only.
        public var readOnly: Swift.Bool?
        /// The maximum amount of storage in gibibytes (GiB) that the volume can use from its parent. You can specify a quota larger than the storage on the parent volume.
        public var storageCapacityQuotaGiB: Swift.Int?
        /// The amount of storage in gibibytes (GiB) to reserve from the parent volume. You can't reserve more storage than the parent volume has reserved.
        public var storageCapacityReservationGiB: Swift.Int?
        /// An object specifying how much storage users or groups can use on the volume.
        public var userAndGroupQuotas: [FSxClientTypes.OpenZFSUserOrGroupQuota]?

        public init (
            dataCompressionType: FSxClientTypes.OpenZFSDataCompressionType? = nil,
            nfsExports: [FSxClientTypes.OpenZFSNfsExport]? = nil,
            readOnly: Swift.Bool? = nil,
            storageCapacityQuotaGiB: Swift.Int? = nil,
            storageCapacityReservationGiB: Swift.Int? = nil,
            userAndGroupQuotas: [FSxClientTypes.OpenZFSUserOrGroupQuota]? = nil
        )
        {
            self.dataCompressionType = dataCompressionType
            self.nfsExports = nfsExports
            self.readOnly = readOnly
            self.storageCapacityQuotaGiB = storageCapacityQuotaGiB
            self.storageCapacityReservationGiB = storageCapacityReservationGiB
            self.userAndGroupQuotas = userAndGroupQuotas
        }
    }

}
