// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDataRepositoryTaskInput: Swift.Equatable {
    /// (Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.
    public var clientRequestToken: Swift.String?
    /// The globally unique ID of the file system, assigned by Amazon FSx.
    /// This member is required.
    public var fileSystemId: Swift.String?
    /// (Optional) The path or paths on the Amazon FSx file system to use when the data repository task is processed. The default path is the file system root directory. The paths you provide need to be relative to the mount point of the file system. If the mount point is /mnt/fsx and /mnt/fsx/path1 is a directory or file on the file system you want to export, then the path to provide is path1. If a path that you provide isn't valid, the task fails.
    public var paths: [Swift.String]?
    /// Defines whether or not Amazon FSx provides a CompletionReport once the task has completed. A CompletionReport provides a detailed report on the files that Amazon FSx processed that meet the criteria specified by the Scope parameter. For more information, see [Working with Task Completion Reports](https://docs.aws.amazon.com/fsx/latest/LustreGuide/task-completion-report.html).
    /// This member is required.
    public var report: FSxClientTypes.CompletionReport?
    /// A list of Tag values, with a maximum of 50 elements.
    public var tags: [FSxClientTypes.Tag]?
    /// Specifies the type of data repository task to create.
    /// This member is required.
    public var type: FSxClientTypes.DataRepositoryTaskType?

    public init (
        clientRequestToken: Swift.String? = nil,
        fileSystemId: Swift.String? = nil,
        paths: [Swift.String]? = nil,
        report: FSxClientTypes.CompletionReport? = nil,
        tags: [FSxClientTypes.Tag]? = nil,
        type: FSxClientTypes.DataRepositoryTaskType? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.fileSystemId = fileSystemId
        self.paths = paths
        self.report = report
        self.tags = tags
        self.type = type
    }
}
