// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppMeshClientTypes.VirtualGatewayListener: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionPool
        case healthCheck
        case portMapping
        case tls
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionPool = connectionPool {
            try encodeContainer.encode(connectionPool, forKey: .connectionPool)
        }
        if let healthCheck = healthCheck {
            try encodeContainer.encode(healthCheck, forKey: .healthCheck)
        }
        if let portMapping = portMapping {
            try encodeContainer.encode(portMapping, forKey: .portMapping)
        }
        if let tls = tls {
            try encodeContainer.encode(tls, forKey: .tls)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let healthCheckDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.VirtualGatewayHealthCheckPolicy.self, forKey: .healthCheck)
        healthCheck = healthCheckDecoded
        let portMappingDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.VirtualGatewayPortMapping.self, forKey: .portMapping)
        portMapping = portMappingDecoded
        let tlsDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.VirtualGatewayListenerTls.self, forKey: .tls)
        tls = tlsDecoded
        let connectionPoolDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.VirtualGatewayConnectionPool.self, forKey: .connectionPool)
        connectionPool = connectionPoolDecoded
    }
}
